dates <- anydate(Tested[,1]    )
if(!("Pending.Investigation" %in% names(hospital))){
target = which(names(hospital)== "Palo.Alto")
hospital = cbind(hospital[,1:target,drop=F], data.frame("Pending.Investigation"=""), hospital[,(target+1):length(hospital),drop=F])
}
for(i in 2:(length(county_names))){
i = county_names[i]
test <- Tested[,i]
temp = length(test)
pos <- as.numeric(Positive[,i])
rec <- as.numeric(Recovered[,i])
hosp <- as.integer(hospital[,i])
hosp = c(rep(NA, length(test)-length(hosp)),hosp)
death <- as.numeric(Deaths[,i])
temp <- data.frame(
date = dates,
Tested = test,
Positive = pos,
Recovered = rec,
Hospitalized = hosp,
Deaths = death)
temp <- temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day7.Perc = Day7.Pos/Day7.Test,
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14),
Day14.Perc = Day14.Pos/Day14.Test,
Not.Sick = (lag(Positive, n= 10) -
lag(Positive, n=28))*0.7,
True.Active = Positive - Recovered -
Deaths - round(Not.Sick, digits = 0)
)
assign(paste(i,"Data", sep=""), temp)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
}
i
hosp
len(hosp)
length(hosp)
lenght(pos)
length(pos)
length(test)
hospital <- hospital[!is.na(hospital$Adair),]
for(i in 2:(length(county_names))){
i = county_names[i]
test <- Tested[,i]
temp = length(test)
pos <- as.numeric(Positive[,i])
rec <- as.numeric(Recovered[,i])
hosp <- as.integer(hospital[,i])
hosp = c(rep(NA, length(test)-length(hosp)),hosp)
death <- as.numeric(Deaths[,i])
temp <- data.frame(
date = dates,
Tested = test,
Positive = pos,
Recovered = rec,
Hospitalized = hosp,
Deaths = death)
temp <- temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day7.Perc = Day7.Pos/Day7.Test,
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14),
Day14.Perc = Day14.Pos/Day14.Test,
Not.Sick = (lag(Positive, n= 10) -
lag(Positive, n=28))*0.7,
True.Active = Positive - Recovered -
Deaths - round(Not.Sick, digits = 0)
)
assign(paste(i,"Data", sep=""), temp)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
}
i
tail(temp)
#####################################
#### Fill in covid19
#####################################
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
names(covid19)[names(covid19) == "Ã¯..date"] <- 'date'
covid19$date = anydate(covid19$date)
if(covid19[nrow(covid19), "date"] != date){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
i=as.Date(date)
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered", "Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P",
"Butler.R", "Butler.D")]=
ButlerData[ButlerData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P",
"BlackHawk.R", "BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == as.Date(date),"Total.Tested"] =
tempdata[1,"Individuals Tested"]
covid19[covid19$date == as.Date(date),"positive"] =
tempdata[1,"Total Confirmed Cases"]
covid19[covid19$date == as.Date(date),"Recovered"] =
tempdata[1,"Recovering"]
covid19[covid19$date == as.Date(date),"deaths"] =
tempdata[1,"Deceased"]
covid19[covid19$date == as.Date(date),"hospitalized"] =
tempdata[1,"Hospitalized"]
covid19[covid19$date == as.Date(date),"ICU"] =
tempdata[1,"COVID-19 Patients in ICU"]
covid19[covid19$date == as.Date(date),"Admit"] =
tempdata[1,"COVID-19 Patients Admitted in last 24 hrs"]
# covid19[covid19$date == temp1[i],"positive"] =
#     Positive[Positive$date == temp[i],"Totals"]
# covid19[covid19$date == temp1[i],"Recovered"] =
#     Recovered[Recovered$date == temp[i],"Totals"]
# covid19[covid19$date == temp1[i],"deaths"] =
#     Deaths[Deaths$date == temp[i],"Totals"]
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
write.csv(covid19, "covid19.csv",row.names = FALSE)
View(covid19)
covid19 = covid19[-513,]
date
grepl(date, covid19$date)
sum(grepl(date, covid19$date))
if(sum(grepl(date, covid19$date)) == 0){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
#######################################
##  Create Clean Dataset
#######################################
clearn <- !is.na(covid19$positive)
clean <- covid19[clearn,]
clean$date = as.Date(clean$date)
cdeaths <- covid19[!is.na(covid19$deaths),]
clean <- clean %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
clean <- clean %>% mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
# np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)
clean <- clean %>% mutate(
#  np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
#Week.Positivity = rollapply(New.Positive, 7, FUN=sum, fill = NA),
#Week.Tests = rollapply(Total.Daily.Tests, 7, FUN=sum, fill = NA),
# Week.Positivity = positive - lag(positive, n=7),
# Week.Tests = Total.Tested - lag(Total.Tested, n=7),
# Week.Positivity.Rate = Week.Positivity/Week.Tests,
# Week.Deaths = deaths - lag(deaths, n=7),
New.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
New.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
New.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
New.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
)
# clean <- clean %>% mutate(wktot = Week.Positivity)
# clean$wktot <- sapply(clean$date,function(x)sum(clean[difftime(clean$date,x,,"days") %in% 0:-6,]$New.Positive))
lastrow <- nrow(clean)
clean$deaths = sapply(clean$deaths, as.integer)
#clean <- clean %>% mutate(
#  nd_7day = deaths - lag(deaths, n=7), #rollmean(deaths, k=7, fill = NA,),
#  pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))
#rollmean(New.Percent.Positive, k=7, fill = NA)
# )
head(ButlerData)
subset(BremerData, date == (day-365))$New.Pos)
subset(BremerData, date == (day-365))$New.Pos
subset(ButlerData, date == (day-365))$New.Pos
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
names(county)
county$county == "Bremer"
sum(county$county == "Bremer")
names(county)
county = read_csv("censusCounties.csv")
names(counties)
names(county)
subset(county, STATE == "IA")
head(county$STATE)
subset(county, STATE == "Iowa")
## Select data for only Iowa Counties
county = subset(county, STATE == "Iowa")
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(clean[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 15
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population,
Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,
Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
names(Risk)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population,
Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,
Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
names(Risk)
head(Risk)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population ,
)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
)
Risk
rm(Risk)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
)
Risk
Risk = data.frame(Bremer = Bremerlastrow$Active/Bremer_Population
)
Risk
Risk = data.frame('Bremer.Prob' = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
names(Risk)
Risk = data.frame('Bremer.Prob' = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
Risk <- data.frame('Bremer.Prob' = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
rm(Risk)
Risk <- data.frame('Bremer.Prob' = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
Risk <- data.frame("Bremer.Prob" = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
Risk <- data.frame("foo" = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
Risk <- data.frame(foo = Bremerlastrow$Active/Bremer_Population
)
names(Risk)
Risk <- mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk <- Risk %>% mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
names(Risk)
Risk = Risk[,-1]
Risk <- Risk %>% mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
round(Risk$Bremer.Risk*100, digits = 2)
round(Risk$Bremer.Risk*100, digits = 2)[1]
round(Risk$Bremer.Risk*100, digits = 2)[1]$
1
round(Risk$Bremer.Risk*100, digits = 2)[1,]
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
# AC = as.integer(lastrow["Active"])
# H = as.integer(lastrow["Hospitalized"])
# NP = as.integer(lastrow["New.Pos"])
# PR = as.numeric(round(lastrow["Frac.Pos"]*100, digits = 2))
# ND = as.integer(lastrow["New.Deaths"])
# T = as.integer(lastrow["New.Test"])
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(clean[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 15
Risk <- Risk %>% mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
day = as.Date(day)
pactive <- qplot(date, Still.Sick, data = clean[-(1:23),], geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Iowa") +  geom_hline(yintercept = oldactive, color = "red")
# geom_text(
#   aes(x= anydate(clean$date[1])+80, y= oldactive,
#       label = as.Date(day)-365, vjust = -0.5),
#   colour = "black")
png(paste(day,"pactive.png"))
pactive
dev.off()
pactive
ppositive <-qplot(date, New.Percent.Positive, data = clean[-(1:7),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
ggtitle("Fraction of Positive COVID-19 Tests in Iowa")
png(paste(day,"ppositive.png"))
ppositive
dev.off()
ppositive
# p7positive <-qplot(date, Week.Positivity.Rate, data = clean[-(1:20),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
# ggtitle("7 day average of Fraction of Positive COVID-19 Tests in Iowa")
# png(paste(day,"p7positive.png"))
#
# p7positive
# dev.off()
# p7positive
State_Average_Active <- today$Still.Sick/IowaPop*100000
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
#    "Known Active COVID-19 Cases in Bremer County")
#+  geom_hline(aes(yintercept=State_Average_Active)
pButler <-qplot(date,
#Butler.SS/Butler_Population*100000,
Butler.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Butler County")
ggtitle("Known Active COVID-19 Cases in Butler County Per 100,000 People")
#+  geom_hline(aes(yintercept=State_Average_Active)
png(paste(day,"pButler.png"))
pButler
dev.off()
pButler
pBlackHawk <-qplot(date,
#Butler.SS/Butler_Population*100000,
BlackHawk.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Black Hawk County")
png(paste(day,"pBlackHawk.png"))
pBlackHawk
dev.off()
pBlackHawk
png(paste(day,"pBremer.png"))
pBremer
dev.off()
pBremer
day7pos.Bremer <- round(
BremerData[nrow(BremerData), ncol(BremerData)]*100, digits=1)
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=360), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
pBremer
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
pBremer
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=30), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
pBremer
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
mydate <- Sys.Date()
hosp_by_county <- pdf_text("hosp_by_county.pdf") %>%
readr::read_lines() %>% str_squish()
# hosp_by_county <-    str_squish(hosp_by_county)
temp <- hosp_by_county
hosp_by_county <- temp[5:37]
temp1 = strsplit(temp[41]," ") %>% ldply()
date = as.character(mdy(temp1[3]))
hosp_by_county <-hosp_by_county %>%
strsplit("(?= [A-Za-z])(?<=[0-9])|(?= [0-9])(?<=[A-Za-z])", perl=TRUE)
hosp_by_county_df <- plyr::ldply(hosp_by_county)
temp1 <- hosp_by_county_df[,1:2]
temp2 <- hosp_by_county_df[,3:4]
temp3 <- hosp_by_county_df[,5:6]
colnames(temp2) <- names(temp1)
colnames(temp3) <- names(temp1)
hosp_by_county <- rbind(temp1, temp2, temp3)
colnames(hosp_by_county) <- c("County", "Hospitalized")
hosp_by_county <-hosp_by_county %>%
mutate(Hospitalized = as.numeric(Hospitalized))
temp1 = sum(hosp_by_county[,2])
hosp_by_county <- rbind(hosp_by_county, c("Totals", temp1))
rm(temp1, temp2, temp3, hosp_by_county_df)
rownames(hosp_by_county) <- hosp_by_county[,1]
hospital <- as.data.frame(read.csv("CountyHospitilizations.csv"))
hospital <- hospital[,-1]
#hospital[,1] = mdy(hospital[,1])
h_county <-  t(hosp_by_county[,2])
colnames(h_county) <-  hosp_by_county[,1]
h_county <- cbind(date = c(date, h_county))
rownames(h_county) <- colnames(hospital)
h_county <- t(h_county)
if(mydate1== date){
hospital <- rbind(hospital, h_county)
} else {
temp <-hospital[,1]== date
temp1 <- (1:600)[temp][1]
hospital[temp1,] <- h_county
if(as.character(hospital[nrow(hospital),1]) != mydate1){
hospital <- rbind.fill(hospital, data.frame(Date = Sys.Date()))
}
}
write.csv(hospital, "CountyHospitilizations.csv")
hospital <- hospital[!is.na(hospital$Adair),]
tail(hospital[,1:4])
qplot(as.Date(date), hospitalized,
data = tail(clean, n=90),
geom = c("point", "smooth")) +
labs(title = "Patients Hospitalized with
COVID-19 in Iowa")
qplot(as.Date(date), hospitalized,
data = tail(covid19, n=90),
geom = c("point", "smooth")) +
labs(title = "Patients Hospitalized with
COVID-19 in Iowa")
