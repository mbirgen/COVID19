library(pdftools)
library(tidyverse)
library(stringr)
library(anytime)
#  require(readxl)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
library(readr)
county = read_csv("censusCounties.csv")
## Select data for only Iowa Counties
county = subset(county, STATE == "Iowa")
setwd("C:/Users/mariah.birgen/Dropbox/2021-2022/IowaCOVID19/COVID19")
View(covid19)
write.csv(covid19, "covid19.csv",row.names = FALSE)
date = "2022-04-12"
source("LoadSummary.R")
##Add data to big csv files
temp = c(County = "Totals",
colSums(TestsNew[2:4]))
# temp[2:3] = sapply(temp[2:3], as.integer)
TestsNew1 = TestsNew %>%
select("County", "Total.Positive.Tests","Total.Positive.Cases", "Total.Deaths")%>%
rbind(temp)
TestsNew1 =rbind("date"= as.character(date),TestsNew1)
d_county <- t(TestsNew1)
# d_county <- t(CountyDataOld)
# county_names <- d_county[1,]
# colnames(d_county) <- d_county[1,]
# d_county = d_county[-1,]
# # colnames(d_county)[1] <- "date"
# d_county[1:5,] = sapply(d_county[1:5,], as.integer)
# # d_county[9,] = sapply(d_county[9,], as.numeric)
# # d_county <- as.data.frame(d_county)%>%
# #     mutate(Total = Reduce(`+`, .))
# d_county <- cbind(date=as.character(date),d_county)
# Tested <- read.csv( "CountyData/CountyTests.csv", stringsAsFactors=FALSE)
# Tested <- Tested[,-1]
Positive <- read.csv( "CountyData/CountyPositive.csv", stringsAsFactors=FALSE)
Positive <- Positive[,-1]
Positive.Tests <- read.csv( "CountyData/CountyPositive.csv", stringsAsFactors=FALSE)
Positive.Tests <- Positive.Tests[,-1]
# Recovered <- read.csv( "CountyData/CountyRecovered.csv", stringsAsFactors=FALSE)
# Recovered <- Recovered[,-1]
Deaths <- read.csv( "CountyData/CountyDeaths.csv", stringsAsFactors=FALSE)
Deaths <- Deaths[,-1]
# Active <- read.csv( "CountyData/CountyActive.csv", stringsAsFactors=FALSE)
# Active <- Active[,-1]
templist = c(
# "Tested",
"Positive",
#"Recovered",
"Deaths"
#, "Active"
)
#
# Tested <- Tested[-nrow(Tested),]
# Positive <- Positive[-nrow(Positive),]
# Recovered <- Recovered[-nrow(Recovered),]
# Active <- Active[-nrow(Active),]
# Deaths <- Deaths[-nrow(Deaths),]
if(anydate(Positive[nrow(Positive), 1]) != date){
# Tested <- rbind(Tested, d_county["Individuals.Tested",])
Positive <- rbind(Positive, d_county["Total.Positive.Cases",])
# Recovered <- rbind(Recovered, d_county["Total.Recovered",])
Deaths <- rbind(Deaths, d_county["Total.Deaths",])
# Active <- rbind(Active, d_county["Active",])
Positive.Tests <- rbind(Positive.Tests, d_county["Total.Positive.Tests",])
} else{
# Tested[Tested$date == date,] = d_county["Individuals.Tested",]
Positive[Positive$date == date,] =  d_county["Total.Positive.Cases",]
# Recovered[Recovered$date==date,] =  d_county["Total.Recovered",]
Deaths[Deaths$date == date,] = d_county["Total.Deaths",]
# Active[Active$date == date,] =  d_county["Active",]
Positive.Tests[Positive.Tests$date == date,] =  d_county["Total.Positive.Tests",]
}
# Tested[,-1] = sapply(Tested[,-1], as.integer)
Positive[,-1] = sapply(Positive[,-1], as.integer)
Positive.Tests[,-1] = sapply(Positive.Tests[,-1], as.integer)
# Recovered[,-1] = sapply(Recovered[,-1], as.integer)
Deaths[,-1] = sapply(Deaths[,-1], as.integer)
# Active[,-1] = sapply(Active[,-1], as.integer)
trows <- nrow(Positive)
# newTest <- Tested[trows,-1]-Tested[trows-1,-1]
newPos <- Positive[trows,-1]-Positive[trows-1,-1]
# newRec <- Recovered[trows,-1]-Recovered[trows-1,-1]
newDeath <- Deaths[trows,-1]-Deaths[trows-1,-1]
# PerPos7 <- (Positive[trows,-1]-
#                 Positive[trows-7,-1])/
#     (Tested[trows,-1]-
#          Tested[trows-7,-1])
county_names <- colnames(Positive)
county_names <- county_names[county_names != "Pending Investigation"]
county_names <- county_names[county_names != "Pending.Investigation"]
# county_names <- county_names[-76]
county_names <- gsub(" ", ".", county_names)
county_names <- gsub("'", ".", county_names)
dates <- anydate(Positive[,1]    )
# if(!("Pending.Investigation" %in% names(hospital))){
#     target = which(names(hospital)== "Palo.Alto")
#     hospital = cbind(hospital[,1:target,drop=F], data.frame("Pending.Investigation"=""), hospital[,(target+1):length(hospital),drop=F])
# }
for(i in 2:(length(county_names))){
i = county_names[i]
# test <- Tested[,i]
pos <- as.numeric(Positive[,i])
temp = length(pos)
postest <- as.numeric(Positive.Tests[,i])
postest = c(rep(NA, length(pos)-length(postest)),postest)
rec <- as.numeric(lag(Positive[,i],n=4)-Deaths[,i])
# hosp <- as.integer(hospital[,i])
# hosp = c(rep(NA, length(test)-length(hosp)),hosp)
death <- as.numeric(Deaths[,i])
temp <- data.frame(
date = dates,
TestedPos = postest,
Positive = pos,
Recovered = rec,
# Hospitalized = hosp,
Deaths = death)
temp <- temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
#         New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
True.Active = Positive - lag(Positive, n=2) -
Deaths
)
assign(paste(i,"Data", sep=""), temp)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
}
# write.csv(Tested, "CountyData/CountyTests.csv")
write.csv(Positive, "CountyData/CountyPositive.csv")
write.csv(Positive.Tests, "CountyData/CountyPositiveTests.csv")
# write.csv(Recovered, "CountyData/CountyRecovered.csv")
write.csv(Deaths, "CountyData/CountyDeaths.csv")
# write.csv(Active, "CountyData/CountyActive.csv")
tail(Positive[,1:4])
#####################################
#### Fill in covid19
#####################################
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
## Fix an error that sometimes comes from importing from EXCEL
names(covid19)[1] <- "date"
# names(covid19)[names(covid19) == "ï..date"] <- 'date'
## Format date column correctly
covid19$date = anydate(covid19$date)
## Check to see if date already has a row in the data, if not add such a row.
if(sum(grepl(date, covid19$date)) == 0){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
i=as.Date(date)
# i = as.Date("2021-11-22")
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered",
"Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P", "Butler.R",
"Butler.D")]=
ButlerData[ButlerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P", "BlackHawk.R" ,
"BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
# covid19[covid19$date == as.Date(date),"Total.Tested"] =
#     Tested[anydate(Tested$date) == date,"Totals"]
#
covid19[covid19$date == as.Date(date),"positive"] =
Positive[anydate(Positive$date) == date,"Totals"]
# covid19[covid19$date == as.Date(date),"Recovered"] =
#     Recovered[anydate(Recovered$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"deaths"] = Deaths[anydate(Deaths$date) == date,"Totals"]
# covid19[covid19$date == as.Date(date),"hospitalized"] =
#     statedata[anydate(statedata$date)==date, "Hospitalized"]
# covid19[covid19$date == as.Date(date),"ICU"] =
#     statedata[anydate(statedata$date)==date, "COVID.19.Patients.in.ICU"]
# covid19[covid19$date == as.Date(date),"Admit"] = statedata[anydate(statedata$date)==date, "COVID.19.Patients.Admitted.in.last.24.hrs"]
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
write.csv(covid19, "covid19.csv",row.names = FALSE)
#####################################
#### Fill in covid19
#####################################
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
## Fix an error that sometimes comes from importing from EXCEL
names(covid19)[1] <- "date"
# names(covid19)[names(covid19) == "ï..date"] <- 'date'
## Format date column correctly
covid19$date = anydate(covid19$date)
## Check to see if date already has a row in the data, if not add such a row.
if(sum(grepl(date, covid19$date)) == 0){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
i=as.Date(date)
# i = as.Date("2021-11-22")
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered",
"Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P", "Butler.R",
"Butler.D")]=
ButlerData[ButlerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P", "BlackHawk.R" ,
"BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
# covid19[covid19$date == as.Date(date),"Total.Tested"] =
#     Tested[anydate(Tested$date) == date,"Totals"]
#
covid19[covid19$date == as.Date(date),"positive"] =
Positive[anydate(Positive$date) == date,"Totals"]
# covid19[covid19$date == as.Date(date),"Recovered"] =
#     Recovered[anydate(Recovered$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"deaths"] = Deaths[anydate(Deaths$date) == date,"Totals"]
# covid19[covid19$date == as.Date(date),"hospitalized"] =
#     statedata[anydate(statedata$date)==date, "Hospitalized"]
# covid19[covid19$date == as.Date(date),"ICU"] =
#     statedata[anydate(statedata$date)==date, "COVID.19.Patients.in.ICU"]
# covid19[covid19$date == as.Date(date),"Admit"] = statedata[anydate(statedata$date)==date, "COVID.19.Patients.Admitted.in.last.24.hrs"]
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
write.csv(covid19, "covid19.csv",row.names = FALSE)
qplot(date, New.Positive.Tests, data = tail(covid19, n=40))+geom_smooth(span = 0.3, se = TRUE)
qplot(date, hospitalized, data = tail(covid19, n=80))+geom_smooth(span = 0.3, se = TRUE)
##############################################
mergedYearonYearHospMeans = covid19 %>%
drop_na(hospitalized) %>%
select("date","hospitalized") %>%
mutate(week = week(date),
year = year(date)) %>%
group_by(year, week) %>%
summarise_at(vars(hospitalized), list(WeeklyAve = mean))
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")
#######################################
##  Create Clean Dataset
#######################################
clearn <- !is.na(covid19$positive)
clean <- covid19[clearn,]
clean$date = as.Date(clean$date)
cdeaths <- covid19[!is.na(covid19$deaths),]
clean <- clean %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered - deaths,
time.change = date - lag(date)
)
clean <- clean %>% mutate(
# negative = Total.Tested - positive,
# Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
# np_7day = (positive - lag(positive, n=7))/7,
# New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100,
np_day = New.Positive/as.integer(time.change)
)
clean <- clean %>% mutate(
# New.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
New.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
# New.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
New.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
)
today <- clean[nrow(clean),]
day <- today$date
temp = tail(statedata[,"Individuals.Tested"],n=2)
new_pos <- today$New.Positive
# percent_pos <- round(today$New.Positive/today$New.Positive.Tests*100, digits = 1)
percent_pos7 <- round(clean$Week.Positivity.Rate[nrow(clean)-4]*100, digits = 1)
percent_hospital <- round(clean$Percent.Hospitalized[nrow(clean)], digits = 1)
# percent_hospital <- clean$Percent.Hospitalized[nrow(clean)]
ICU <- today$ICU
percent_ICU <- round(today$ICU/today$hospitalized*100, digits = 1)
sick <- format(today$Still.Sick, scientific = FALSE, big.mark=",")
IowaPop <- 3155070
test.positivity = round(sum(New.Positive.Tests["Total.Positive.Tests",-1])/sum(New.Tests["Total.Tests",-1])*100,digits = 1)
clean = clean %>% mutate(
Individuals.Reported = Individuals.Tested - lag(Individuals.Tested),
Individuals.Positive = Individuals.Postive - lag(Individuals.Postive),
Bremer.Rep = Bremer.Individuals.Tested - lag(Bremer.Individuals.Postive))
write.csv(clean, "clean.csv")
# Adding more data to Bremer
# hosp <- as.integer(hospital[,"Bremer"])
# temp <- clean %>% select("date","Bremer.Positive",
#                          "Bremer.Recovered", "Bremer.Death")
# names(temp) = c("date","Positive", "Recovered", "Deaths")
# temp <- subset(temp,
#                !is.na(Positive) & date < "2020-07-31")%>%
#   mutate(Tested = NA, Hospitalized = NA)
# temp2 <- BremerData %>% select("date","Hospitalized", "Tested","Positive", "Recovered", "Deaths")
# temp = rbind(temp, temp2)
# rm(temp2)
# temp$Tested = as.integer(temp$Tested)
# temp <- temp  %>%
#   mutate(
#     Active = Positive - Recovered - Deaths,
#     New.Pos = Positive - lag(Positive),
#     New.Test = Tested - lag(Tested),
#     New.Rec = Recovered - lag(Recovered),
#     New.Deaths = Deaths - lag(Deaths),
#     Frac.Pos = New.Pos/New.Test,
#     # Day7.Test = Tested - lag(Tested, n=7),
#     # Day7.Pos = Positive - lag(Positive, n=7),
#     # Day7.Rec = Recovered - lag(Recovered, n=7),
#     # Day7.Death = Deaths - lag(Deaths, n=7),
#     # Day7.Active = Active - lag(Active, n=7),
#     # Day7.Perc = Day7.Pos/Day7.Test,
#     # Day14.Test = Tested - lag(Tested, n=14),
#     # Day14.Pos = Positive - lag(Positive, n=14),
#     # Day14.Rec = Recovered - lag(Recovered, n=14),
#     # Day14.Death = Deaths - lag(Deaths, n=14),
#     # Day14.Active = Active - lag(Active, n=14),
#     # Day14.Perc = Day14.Pos/Day14.Test,
#             # Not.Sick = (lag(Positive, n= 10) -
#             #               lag(Positive, n=28))*0.7,
#             # True.Active = Positive - Recovered -
#             #   Deaths - round(Not.Sick, digits = 0)
#   )
#
# BremerData = temp
# rm(temp)
write.csv(BremerData, "CountyData/BremerData.csv")
maxtoday = data.frame(colMax(clean[,-1]) == today[,-1])
temp = subset(clean, date == (as.Date(day)-365))
oldactive = temp$positive-temp$Recovered-temp$deaths
rm(temp)
# week.new.pos = round(new_pos/7, digits = 1)
Active = clean$positive-lag(clean$positive, n=5)-clean$deaths
no = ""
OldDeaths <- read.csv(paste0("Total Deaths",no,".csv"))
str(OldDeaths)
# OldDeaths <- read.csv(paste0("Total Deaths",day(mydate-1),".csv"))
OldDeaths[,1] = as.Date(OldDeaths[,1])
# weekOldDeaths <- read.csv(paste0("Total Deaths",day(mydate-7),".csv"))
# weekOldDeaths[,1] = as.Date(OldDeaths[,1])
n = "(1)"
NewDeaths <- read.csv(paste0("Total Deaths",n,".csv"))
# weekOldDeaths <- read.csv(paste0("Total Deaths",day(mydate-7),".csv"))
# weekOldDeaths[,1] = as.Date(OldDeaths[,1])
n = " (1)"
NewDeaths <- read.csv(paste0("Total Deaths",n,".csv"))
# NewDeaths <- read.csv(paste0("Total Deaths",day(mydate),".csv"))
NewDeaths[,1] = as.Date(NewDeaths[,1])
NDeaths = as.data.frame(merge(NewDeaths, OldDeaths, by ="EventDateOfDeath", all=T))
NDeaths[is.na(NDeaths)] <- 0
NDeaths = NDeaths %>% mutate(change = Total.Deaths...Daily.Total.x
-Total.Deaths...Daily.Total.y,
NewD = paste0(EventDateOfDeath," (",change,")"))
NDeaths[NDeaths$change != 0,"NewD"]
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
# AC = as.integer(lastrow["Active"])
# H = as.integer(lastrow["Hospitalized"])
# NP = as.integer(lastrow["New.Pos"])
# PR = as.numeric(round(lastrow["Frac.Pos"]*100, digits = 2))
# ND = as.integer(lastrow["New.Deaths"])
source("C:/Users/mariah.birgen/Dropbox/2021-2022/IowaCOVID19/COVID19/BremerData1.rmd")
# T = as.integer(lastrow["New.Test"])
require(reshape2)
mydate <- Sys.Date()
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[
county$STATE=="Iowa"&county$COUNTY=="Black Hawk",
][,3]
year_reference = subset(BremerData, date == (day-365))$Active/Bremer_Population*10^5
temp = covid19[,c("date","Bremer.SS", "Butler.SS", "BlackHawk.SS")]
temp = temp %>% mutate(Bremer = Bremer.SS/Bremer_Population$Population*100000,
Butler = Butler.SS/Butler_Population$Population* 100000,
BlackHawk = BlackHawk.SS/BlackHawk_Population$Population * 100000)
temp = tail(temp, n=90)
mtemp = melt(temp, id.vars = "date",
measure.vars = c('Bremer', 'Butler', 'BlackHawk'))
printplot <- qplot(as.Date(date), value, color = variable, data = mtemp, geom = "point") +
geom_smooth(span = 0.3, se = TRUE) +
ylab("Cases per 100,000") +
labs(color = "County", title = paste("Active Cases Per 100,000", mydate))
# +geom_hline(yintercept = year_reference,
#            color = "red") +
# geom_text(
#   aes(x= temp$date[1]+20, y= year_reference,
#       label = day-365, vjust = -0.5),
#   colour = "black")
print(printplot)
ggsave(paste(day,"BBBCounties.png"), plot = printplot)
# ggsave("BBBCounties.png")
#
png(paste(day,"BBBCounties.png"))
print(printplot)
dev.off()
# colnames(BremerData) = CountyDataLongNames
lastrow <- BremerData[nrow(BremerData),]
kable(t(lastrow[-1]), digits = 2)
kable(BremerData[,1:7])
NDeaths = as.data.frame(merge(NewDeaths, OldDeaths, by ="EventDateOfDeath", all=T))
NDeaths[is.na(NDeaths)] <- 0
NDeaths = NDeaths %>% mutate(change = Total.Deaths...Daily.Total.x
-Total.Deaths...Daily.Total.y,
NewD = paste0(EventDateOfDeath," (",change,")"))
View(NDeaths)
NDeaths %>% mutate(change = Daily.Total.x - Daily.Total.y)
NDeaths = NDeaths %>% mutate(change = Daily.Total.x
-Daily.Total.y
NewD = paste0(EventDateOfDeath," (",change,")"))
NDeaths = NDeaths %>% mutate(change = Daily.Total.x
-Daily.Total.y)
names(NewDeaths)
names(NDeaths)
NDeaths = NDeaths %>% mutate(change = Total.Deaths.x
-Total.Deaths.y)
NDeaths = NDeaths %>% mutate(change = Total.Deaths.x
-Total.Deaths.y,
NewD = paste0(EventDateOfDeath," (",change,")"))
NDeaths[NDeaths$change != 0,"NewD"]
covid19_1 =  covid19 %>%
complete(date =
seq.Date(min(covid19$date),
max(covid19$date),
by = "day")
) %>%
fill(`positive`,`Recovered`,`deaths`,
"Still.Sick", "hospitalized",
`Bremer.Positive`,`Butler.P`,
`BlackHawk.P`, `Bremer.Death`,
`Butler.D`, `BlackHawk.D`) %>%
mutate(
Recovered = lag(positive, n=28) - lag(deaths, n=28),
Bremer.Recovered = lag(Bremer.Positive, n=28) - lag(Bremer.Death, n=28),
Butler.R = lag(Butler.P, n=28) - lag(Butler.D, n=28),
BlackHawk.R = lag(BlackHawk.P, n=28) - lag(BlackHawk.D, n=28)
)
covid19_1 = covid19_1 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
subset(covid19_1, date == (day-365))$Still.Sick
subset(covid19_1, date == (day-365))
qplot(date, New.Positive.Tests, data = tail(covid19_1, n=40))+geom_smooth(span = 0.3, se = TRUE)
qplot(date, hospitalized, data = tail(covid19_1, n=80))+geom_smooth(span = 0.3, se = TRUE)
tail(mergedYearonYearHospMeans,n=4)
##############################################
mergedYearonYearHospMeans = covid19_1 %>%
drop_na(hospitalized) %>%
select("date","hospitalized") %>%
mutate(week = week(date),
year = year(date)) %>%
group_by(year, week) %>%
summarise_at(vars(hospitalized), list(WeeklyAve = mean))
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")+geom_smooth(span = 0.3, se = TRUE)
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")+geom_smooth(span = 0.3, se = TRUE)
##############################################
mergedYearonYearHospMeans = covid19 %>%
drop_na(hospitalized) %>%
select("date","hospitalized") %>%
mutate(week = week(date),
year = year(date)) %>%
group_by(year, week) %>%
summarise_at(vars(hospitalized), list(WeeklyAve = mean))
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")+geom_smooth(span = 0.3, se = TRUE)
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")+geom_smooth(span = 0.3, se = TRUE)
source("C:/Users/mariah.birgen/Dropbox/2021-2022/IowaCOVID19/COVID19/BremerData1.rmd")
View(Active)
View(Positive)
Positive$Bremer = lag(Positve$Bremer, n=4)
Positive$Bremer = lag(Positive$Bremer, n=4)
# Tested <- read.csv( "CountyData/CountyTests.csv", stringsAsFactors=FALSE)
# Tested <- Tested[,-1]
Positive <- read.csv( "CountyData/CountyPositive.csv", stringsAsFactors=FALSE)
Positive <- Positive[,-1]
Positive$Bremer - lag(Positive$Bremer, n=4)
Active1 = Positive - lag(Positive, n=4)
Active1 = Positive[,-1] - lag(Positive[,-1], n=4)
tail(Active1[,1:4])
