if (statedata$date[nrow(statedata)] != tempdata[1]){
statedata[nrow(statedata)+1,]=tempdata
}
statedata[,-1] = sapply(statedata[,-1], as.integer)
tail(statedata, n=5)
write.csv(statedata, file = paste(
'CountyData/StateData.csv'),
row.names = FALSE)
##Add data to big csv files
d_county <- t(CountyDataOld)
county_names <- d_county[1,]
colnames(d_county) <- d_county[1,]
d_county = d_county[-1,]
# colnames(d_county)[1] <- "date"
d_county[1:5,] = sapply(d_county[1:5,], as.integer)
# d_county[9,] = sapply(d_county[9,], as.numeric)
# d_county <- as.data.frame(d_county)%>%
#     mutate(Total = Reduce(`+`, .))
d_county <- cbind(date=as.character(date),d_county)
Tested <- read.csv( "CountyData/CountyTests.csv", stringsAsFactors=FALSE)
Tested <- Tested[,-1]
Positive <- read.csv( "CountyData/CountyPositive.csv", stringsAsFactors=FALSE)
Positive <- Positive[,-1]
Recovered <- read.csv( "CountyData/CountyRecovered.csv", stringsAsFactors=FALSE)
Recovered <- Recovered[,-1]
Deaths <- read.csv( "CountyData/CountyDeaths.csv", stringsAsFactors=FALSE)
Deaths <- Deaths[,-1]
Active <- read.csv( "CountyData/CountyActive.csv", stringsAsFactors=FALSE)
Active <- Active[,-1]
templist = c("Tested", "Positive", "Recovered", "Deaths", "Active" )
if(anydate(Tested[nrow(Tested), 1]) != date){
Tested <- rbind(Tested, d_county["Individuals.Tested",])
Positive <- rbind(Positive, d_county["Individuals.Positive",])
Recovered <- rbind(Recovered, d_county["Total.Recovered",])
Deaths <- rbind(Deaths, d_county["Total.Deaths",])
Active <- rbind(Active, d_county["Active",])
}
Tested[,-1] = sapply(Tested[,-1], as.integer)
Positive[,-1] = sapply(Positive[,-1], as.integer)
Recovered[,-1] = sapply(Recovered[,-1], as.integer)
Deaths[,-1] = sapply(Deaths[,-1], as.integer)
Active[,-1] = sapply(Active[,-1], as.integer)
trows <- nrow(Tested)
newTest <- Tested[trows,-1]-Tested[trows-1,-1]
newPos <- Positive[trows,-1]-Positive[trows-1,-1]
newRec <- Recovered[trows,-1]-Recovered[trows-1,-1]
newDeath <- Deaths[trows,-1]-Deaths[trows-1,-1]
PerPos7 <- (Positive[trows,-1]-
Positive[trows-7,-1])/
(Tested[trows,-1]-
Tested[trows-7,-1])
county_names <- colnames(Tested)
county_names <- county_names[county_names != "Pending Investigation"]
# county_names <- county_names[-76]
county_names <- gsub(" ", ".", county_names)
dates <- anydate(Tested[,1]    )
if(!("Pending.Investigation" %in% names(hospital))){
target = which(names(hospital)== "Palo.Alto")
hospital = cbind(hospital[,1:target,drop=F], data.frame("Pending.Investigation"=""), hospital[,(target+1):length(hospital),drop=F])
}
for(i in 2:(length(county_names))){
i = county_names[i]
test <- Tested[,i]
temp = length(test)
pos <- as.numeric(Positive[,i])
rec <- as.numeric(Recovered[,i])
hosp <- as.integer(hospital[,i])
hosp = c(rep(NA, length(test)-length(hosp)),hosp)
death <- as.numeric(Deaths[,i])
temp <- data.frame(
date = dates,
Tested = test,
Positive = pos,
Recovered = rec,
Hospitalized = hosp,
Deaths = death)
temp <- temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day7.Perc = Day7.Pos/Day7.Test,
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14),
Day14.Perc = Day14.Pos/Day14.Test,
Not.Sick = (lag(Positive, n= 10) -
lag(Positive, n=28))*0.7,
True.Active = Positive - Recovered -
Deaths - round(Not.Sick, digits = 0)
)
assign(paste(i,"Data", sep=""), temp)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
}
tail(Positive[,1:4])
tail(Positive[,98:100])
write.csv(Tested, "CountyData/CountyTests.csv")
write.csv(Positive, "CountyData/CountyPositive.csv")
write.csv(Recovered, "CountyData/CountyRecovered.csv")
write.csv(Deaths, "CountyData/CountyDeaths.csv")
write.csv(Active, "CountyData/CountyActive.csv")
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
names(covid19)[names(covid19) == "Ã¯..date"] <- 'date'
covid19$date = anydate(covid19$date)
if(covid19[nrow(covid19), "date"] != date){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
i=as.Date(date)
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered", "Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P",
"Butler.R", "Butler.D")]=
ButlerData[ButlerData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P",
"BlackHawk.R", "BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == as.Date(date),"Total.Tested"] =
tempdata[1,"Individuals Tested"]
covid19[covid19$date == as.Date(date),"positive"] =
tempdata[1,"Total Confirmed Cases"]
covid19[covid19$date == as.Date(date),"Recovered"] =
tempdata[1,"Recovering"]
covid19[covid19$date == as.Date(date),"deaths"] =
tempdata[1,"Deceased"]
covid19[covid19$date == as.Date(date),"hospitalized"] =
tempdata[1,"Hospitalized"]
covid19[covid19$date == as.Date(date),"ICU"] =
tempdata[1,"COVID-19 Patients in ICU"]
covid19[covid19$date == as.Date(date),"Admit"] =
tempdata[1,"COVID-19 Patients Admitted in last 24 hrs"]
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
View(covid19)
write.csv(covid19, "covid19.csv",row.names = FALSE)
qplot(as.Date(date), hospitalized,
data = tail(clean, n=90),
geom = c("point", "smooth")) +
labs(title = "Patients Hospitalized with
COVID-19 in Iowa")
mydate <- Sys.Date()
filename <- "censusCounties.csv"
county <- read.csv(filename,
stringsAsFactors = FALSE)
clearn <- !is.na(covid19$positive)
clean <- covid19[clearn,]
clean$date = as.Date(clean$date)
cdeaths <- covid19[!is.na(covid19$deaths),]
clean <- clean %>% mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
# np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)
clean <- clean %>% mutate(
#  np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
#Week.Positivity = rollapply(New.Positive, 7, FUN=sum, fill = NA),
#Week.Tests = rollapply(Total.Daily.Tests, 7, FUN=sum, fill = NA),
# Week.Positivity = positive - lag(positive, n=7),
# Week.Tests = Total.Tested - lag(Total.Tested, n=7),
# Week.Positivity.Rate = Week.Positivity/Week.Tests,
# Week.Deaths = deaths - lag(deaths, n=7),
New.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
New.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
New.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
New.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
)
# clean <- clean %>% mutate(wktot = Week.Positivity)
# clean$wktot <- sapply(clean$date,function(x)sum(clean[difftime(clean$date,x,,"days") %in% 0:-6,]$New.Positive))
lastrow <- nrow(clean)
clean$deaths = sapply(clean$deaths, as.integer)
#clean <- clean %>% mutate(
#  nd_7day = deaths - lag(deaths, n=7), #rollmean(deaths, k=7, fill = NA,),
#  pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))
#rollmean(New.Percent.Positive, k=7, fill = NA)
# )
```{r, echo = FALSE}
today <- clean[nrow(clean),]
day <- today$date
new_pos <- today$New.Positive
percent_pos <- round(clean$New.Percent.Positive[nrow(clean)]*100, digits = 1)
# percent_pos <- today$New.Percent.Positive
percent_pos7 <- round(clean$Week.Positivity.Rate[nrow(clean)-4]*100, digits = 1)
percent_hospital <- round(clean$Percent.Hospitalized[nrow(clean)], digits = 1)
# percent_hospital <- clean$Percent.Hospitalized[nrow(clean)]
ICU <- today$ICU
percent_ICU <- round(today$ICU/today$hospitalized*100, digits = 1)
sick <- format(today$Still.Sick, scientific = FALSE, big.mark=",")
IowaPop <- 3155070
clean = clean %>% mutate(
Individuals.Reported = Individuals.Tested - lag(Individuals.Tested),
Individuals.Positive = Individuals.Postive - lag(Individuals.Postive),
Bremer.Rep = Bremer.Individuals.Tested - lag(Bremer.Individuals.Postive))
maxtoday = data.frame(colMax(clean[,-1]) == today[,-1])
temp = subset(clean, date == (as.Date(day)-365))
oldactive = temp$positive-temp$Recovered-temp$deaths
rm(temp)
day = as.Date(day)
pactive <- qplot(date, Still.Sick, data = clean[-(1:23),], geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Iowa") +  geom_hline(yintercept = oldactive, color = "red")
# geom_text(
#   aes(x= anydate(clean$date[1])+80, y= oldactive,
#       label = as.Date(day)-365, vjust = -0.5),
#   colour = "black")
png(paste(day,"pactive.png"))
pactive
dev.off()
pactive
day = as.Date(day)
pactive <- qplot(date, Still.Sick, data = clean[-(1:23),], geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Iowa") +  geom_hline(yintercept = oldactive, color = "red")
# geom_text(
#   aes(x= anydate(clean$date[1])+80, y= oldactive,
#       label = as.Date(day)-365, vjust = -0.5),
#   colour = "black")
png(paste(day,"pactive.png"))
pactive
dev.off()
pactive
ppositive <-qplot(date, New.Percent.Positive, data = clean[-(1:7),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
ggtitle("Fraction of Positive COVID-19 Tests in Iowa")
png(paste(day,"ppositive.png"))
ppositive
dev.off()
ppositive
# p7positive <-qplot(date, Week.Positivity.Rate, data = clean[-(1:20),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
# ggtitle("7 day average of Fraction of Positive COVID-19 Tests in Iowa")
# png(paste(day,"p7positive.png"))
#
# p7positive
# dev.off()
# p7positive
State_Average_Active <- today$Still.Sick/IowaPop*100000
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
#    "Known Active COVID-19 Cases in Bremer County")
#+  geom_hline(aes(yintercept=State_Average_Active)
pButler <-qplot(date,
#Butler.SS/Butler_Population*100000,
Butler.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Butler County")
ggtitle("Known Active COVID-19 Cases in Butler County Per 100,000 People")
#+  geom_hline(aes(yintercept=State_Average_Active)
png(paste(day,"pButler.png"))
pButler
dev.off()
pButler
pBlackHawk <-qplot(date,
#Butler.SS/Butler_Population*100000,
BlackHawk.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Black Hawk County")
png(paste(day,"pBlackHawk.png"))
pBlackHawk
dev.off()
pBlackHawk
png(paste(day,"pBremer.png"))
pBremer
dev.off()
pBremer
day7pos.Bremer <- round(
BremerData[nrow(BremerData), ncol(BremerData)]*100, digits=1)
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
# AC = as.integer(lastrow["Active"])
# H = as.integer(lastrow["Hospitalized"])
# NP = as.integer(lastrow["New.Pos"])
# PR = as.numeric(round(lastrow["Frac.Pos"]*100, digits = 2))
# ND = as.integer(lastrow["New.Deaths"])
# T = as.integer(lastrow["New.Test"])
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(clean[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 15
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population))
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize
)
# Vaccine[,-1] =sapply(Vaccine[,-1], as.integer)
# Risk2 = data.frame(Bremer.Prob = Bremerlastrow$Active/(Bremer_Population-Vaccine[Vaccine$County == "Bremer",6]), Black.Hawk.Prob = Black.Hawklastrow$Active/(BlackHawk_Population- Vaccine[Vaccine$County == "Black Hawk",6]), Butler.Prob = Butlerlastrow$Active/(Butler_Population - Vaccine[Vaccine$County == "Butler",6]))
#
# Risk2 = Risk2 %>% mutate(
#   Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
#   Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
#   Butler.Risk = 1-(1-Butler.Prob*5)^groupsize
#   )
# #######################################
# ###  Vaccine Percentage Calculuation
# Local.Vac = as.data.frame(t(Vaccine[Vaccine$County %in% c("Black Hawk","Bremer","Butler" ),6]))
# names(Local.Vac) = c("Black.Hawk","Bremer","Butler" )
# Local.Vac = cbind(Date = as.Date(Sys.Date()), Local.Vac)
# Local.Vac = Local.Vac %>%
#   mutate(Black.Hawk.Vac.Perc = Black.Hawk/BlackHawk_Population*100,
#          Bremer.Vac.Perc = Bremer/Bremer_Population*100,
#          Butler.Vac.Perc = Butler/Butler_Population*100)
require(reshape2)
mydate <- Sys.Date()
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[
county$STATE=="Iowa"&county$COUNTY=="Black Hawk",
][,3]
year_reference = subset(BremerData, date == (day-365))$Active/Bremer_Population*10^5
temp = clean[,c("date","Bremer.SS", "Butler.SS", "BlackHawk.SS")]
temp = temp %>% mutate(Bremer = Bremer.SS/Bremer_Population*100000,
Butler = Butler.SS/Butler_Population* 100000,
BlackHawk = BlackHawk.SS/BlackHawk_Population * 100000)
temp = tail(temp, n=90)
mtemp = melt(temp, id.vars = "date",
measure.vars = c('Bremer', 'Butler', 'BlackHawk'))
printplot <- qplot(as.Date(date), value, color = variable, data = mtemp, geom = c("point", "smooth")) +
ylab("Cases per 100,000") +
labs(color = "County", title = paste("Active Cases Per 100,000", mydate))
# +geom_hline(yintercept = year_reference,
#            color = "red") +
# geom_text(
#   aes(x= temp$date[1]+20, y= year_reference,
#       label = day-365, vjust = -0.5),
#   colour = "black")
print(printplot)
ggsave(paste(day,"BBBCounties.png"), plot = printplot)
# ggsave("BBBCounties.png")
#
png(paste(day,"BBBCounties.png"))
print(printplot)
dev.off()
# colnames(BremerData) = CountyDataLongNames
lastrow <- BremerData[nrow(BremerData),]
kable(t(lastrow[-1]), digits = 2)
kable(BremerData[,1:7])
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population), Lynn.Prob = LynnData[nrow(LynnData),]$Active/Lynn_Population,Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
date = seq.Date(min(covid19$date),
max(covid19$date), by = "day")
head(covid19$Ã¯..date)
names(covid19)[names(covid19) == "Ã¯..date"] <- 'date'
covid19$date = anydate(covid19$date)
date = seq.Date(min(covid19$date),
max(covid19$date), by = "day")
temp = covid19[] %>%
complete(
date = seq.Date(min(covid19$date),
max(covid19$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.numeric)
# names(temp) = c("date", "Tested", "Positive",
#                "Recovered", "Deaths", "Hospitalized")
temp = temp %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
Week.Positivity = positive -
lag(positive, n=7),
Week.Tests = Total.Tested -
lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tested -
lag(Total.Tested,n=1)
) %>% mutate(
wktot = Week.Positivity,
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
good_dates = as.data.frame(covid19$date)
names(good_dates) = "date"
temp2 = merge(good_dates, temp, by = "date")
nam = names(temp2[,-(1:6)])
covid19 = cbind(covid19, temp2[,nam])
# Vaccine Information
CountyLookup = read.csv("CountyLookUp.csv", stringsAsFactors=F)
testing = read.csv("Vaccine Series Completion by County of Vaccine Provider.csv",
stringsAsFactors = F)
testing$County <- CountyLookup[
match(testing$ADMIN_ADDRESS_COUNTY,
CountyLookup$Ã¯..RECIP_ADDRESS_COUNTY),2]
head(testing)
Vaccine = as.data.frame(read.csv("Vaccine Series Completion by Recipient County of Residence.csv", stringsAsFactors=F))
# Vaccine = sapply(Vaccine, as.integer)
Vaccine$County <- CountyLookup[
match(Vaccine$RECIP_ADDRESS_COUNTY,
CountyLookup$RECIP_ADDRESS_COUNTY),2]
Vaccine = Vaccine %>%
arrange(County)
# Vaccine Information
colTotal <- function(data) sapply(data, sum, na.rm = TRUE)
CountyLookup = as.data.frame(read.csv("CountyLookUp.csv", stringsAsFactors=F, col.names = c("RECIP_ADDRESS_COUNTY", "County")))
CompleteVaccination = read.csv("CountyData/Vaccine.csv", stringsAsFactors = F)
Vaccine = as.data.frame(read.csv("Vaccine Series Completion by Recipient County of Residence.csv", stringsAsFactors=F))
# Vaccine = sapply(Vaccine, as.integer)
Vaccine$County <- CountyLookup[
match(Vaccine$RECIP_ADDRESS_COUNTY,
CountyLookup$RECIP_ADDRESS_COUNTY),2]
Vaccine = Vaccine %>%
arrange(County)
temp1 = colTotal(Vaccine[,-grep("County", colnames(Vaccine))])
Vaccine <- rbind(Vaccine, c( temp1,"Totals"))
# CompleteVaccination[,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination)+1,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination),1] = as.character(Sys.Date())
write.csv(CompleteVaccination, "CountyData/Vaccine.csv", row.names = F)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population), Lynn.Prob = LinnData[nrow(LynnData),]$Active/Linn_Population,Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population), Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population), Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(clean[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 15
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population, Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population), Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
Bremer.Prob = Bremerlastrow$Active/Bremer_Population
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population,
Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,
Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population,)
Risk = data.frame(Bremer.Prob = Bremerlastrow$Active/Bremer_Population , Black.Hawk.Prob = Black.Hawklastrow$Active/BlackHawk_Population,
Butler.Prob = Butlerlastrow$Active/Butler_Population,
WSR.Prob = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
Linn.Prob = LinnData[nrow(LinnData),]$Active/Linn_Population,
Johnson.Prob = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
View(Risk)
