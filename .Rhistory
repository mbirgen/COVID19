dates <- anydate(Tested[,1]    )
if(!("Pending.Investigation" %in% names(hospital))){
target = which(names(hospital)== "Palo.Alto")
hospital = cbind(hospital[,1:target,drop=F], data.frame("Pending.Investigation"=""), hospital[,(target+1):length(hospital),drop=F])
}
for(i in 2:(length(county_names))){
i = county_names[i]
test <- Tested[,i]
temp = length(test)
pos <- as.numeric(Positive[,i])
rec <- as.numeric(Recovered[,i])
hosp <- as.integer(hospital[,i])
hosp = c(rep(NA, length(test)-length(hosp)),hosp)
death <- as.numeric(Deaths[,i])
temp <- data.frame(
date = dates,
Tested = test,
Positive = pos,
Recovered = rec,
Hospitalized = hosp,
Deaths = death)
temp <- temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day7.Perc = Day7.Pos/Day7.Test,
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14),
Day14.Perc = Day14.Pos/Day14.Test,
Not.Sick = (lag(Positive, n= 10) -
lag(Positive, n=28))*0.7,
True.Active = Positive - Recovered -
Deaths - round(Not.Sick, digits = 0)
)
assign(paste(i,"Data", sep=""), temp)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
}
write.csv(Tested, "CountyData/CountyTests.csv")
write.csv(Positive, "CountyData/CountyPositive.csv")
write.csv(Recovered, "CountyData/CountyRecovered.csv")
write.csv(Recovered, "CountyData/CountyRecovered.csv")
write.csv(Deaths, "CountyData/CountyDeaths.csv")
write.csv(Active, "CountyData/CountyActive.csv")
#####################################
#### Fill in covid19
#####################################
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
## Fix an error that sometimes comes from importing from EXCEL
names(covid19)[1] <- "date"
# names(covid19)[names(covid19) == "Ã¯..date"] <- 'date'
## Format date column correctly
covid19$date = anydate(covid19$date)
## Check to see if date already has a row in the data, if not add such a row.
if(sum(grepl(date, covid19$date)) == 0){
covid19[nrow(covid19)+1, "date"] =
as.character(date)
}
i=as.Date(date)
# i = as.Date("2021-11-22")
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered", "Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P",
"Butler.R", "Butler.D")]=
ButlerData[ButlerData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P",
"BlackHawk.R", "BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c("Positive", "Recovered",
"Deaths")]
covid19[covid19$date == as.Date(date),"Total.Tested"] =
Tested[anydate(Tested$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"positive"] =
Positive[anydate(Positive$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"Recovered"] =
Recovered[anydate(Recovered$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"deaths"] = Deaths[anydate(Deaths$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"hospitalized"] =
statedata[anydate(statedata$date)==date, "Hospitalized"]
covid19[covid19$date == as.Date(date),"ICU"] =
statedata[anydate(statedata$date)==date, "COVID.19.Patients.in.ICU"]
covid19[covid19$date == as.Date(date),"Admit"] = statedata[anydate(statedata$date)==date, "COVID.19.Patients.Admitted.in.last.24.hrs"]
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
write.csv(covid19, "covid19.csv",row.names = FALSE)
tail(covid19[,1:4])
#######################################
##  Create Clean Dataset
#######################################
clearn <- !is.na(covid19$Recovered)
clean <- covid19[clearn,]
clean$date = as.Date(clean$date)
cdeaths <- covid19[!is.na(covid19$deaths),]
clean <- clean %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
clean <- clean %>% mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
# np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)
clean <- clean %>% mutate(
New.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
New.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
New.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
New.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
)
today <- clean[nrow(clean),]
day <- today$date
new_pos <- today$New.Positive
percent_pos <- round(clean$New.Percent.Positive[nrow(clean)]*100, digits = 1)
percent_pos7 <- round(clean$Week.Positivity.Rate[nrow(clean)-4]*100, digits = 1)
percent_hospital <- round(clean$Percent.Hospitalized[nrow(clean)], digits = 1)
# percent_hospital <- clean$Percent.Hospitalized[nrow(clean)]
ICU <- today$ICU
percent_ICU <- round(today$ICU/today$hospitalized*100, digits = 1)
sick <- format(today$Still.Sick, scientific = FALSE, big.mark=",")
IowaPop <- 3155070
clean = clean %>% mutate(
Individuals.Reported = Individuals.Tested - lag(Individuals.Tested),
Individuals.Positive = Individuals.Postive - lag(Individuals.Postive),
Bremer.Rep = Bremer.Individuals.Tested - lag(Bremer.Individuals.Postive))
write.csv(clean, "clean.csv")
# Adding more data to Bremer
hosp <- as.integer(hospital[,"Bremer"])
temp <- clean %>% select("date","Bremer.Positive",
"Bremer.Recovered", "Bremer.Death")
names(temp) = c("date","Positive", "Recovered", "Deaths")
temp <- subset(temp,
!is.na(Positive) & date < "2020-07-31")%>%
mutate(Tested = NA, Hospitalized = NA)
temp2 <- BremerData %>% select("date","Hospitalized", "Tested","Positive", "Recovered", "Deaths")
temp = rbind(temp, temp2)
rm(temp2)
temp$Tested = as.integer(temp$Tested)
temp <- temp  %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
# Day7.Test = Tested - lag(Tested, n=7),
# Day7.Pos = Positive - lag(Positive, n=7),
# Day7.Rec = Recovered - lag(Recovered, n=7),
# Day7.Death = Deaths - lag(Deaths, n=7),
# Day7.Active = Active - lag(Active, n=7),
# Day7.Perc = Day7.Pos/Day7.Test,
# Day14.Test = Tested - lag(Tested, n=14),
# Day14.Pos = Positive - lag(Positive, n=14),
# Day14.Rec = Recovered - lag(Recovered, n=14),
# Day14.Death = Deaths - lag(Deaths, n=14),
# Day14.Active = Active - lag(Active, n=14),
# Day14.Perc = Day14.Pos/Day14.Test,
# Not.Sick = (lag(Positive, n= 10) -
#               lag(Positive, n=28))*0.7,
# True.Active = Positive - Recovered -
#   Deaths - round(Not.Sick, digits = 0)
)
BremerData = temp
rm(temp)
write.csv(BremerData, "CountyData/BremerData.csv")
maxtoday = data.frame(colMax(clean[,-1]) == today[,-1])
temp = subset(clean, date == (as.Date(day)-365))
oldactive = temp$positive-temp$Recovered-temp$deaths
rm(temp)
week.new.pos = round(new_pos/7, digits = 1)
# Vaccine Information
colTotal <- function(data) sapply(data, sum, na.rm = TRUE)
CountyLookup = as.data.frame(read.csv("CountyLookUp.csv", stringsAsFactors=F, col.names = c("RECIP_ADDRESS_COUNTY", "County")))
CompleteVaccination = read.csv("CountyData/Vaccine.csv", stringsAsFactors = F)
Vaccine = as.data.frame(read.csv("Vaccine Series Completion by Recipient County of Residence.csv", stringsAsFactors=F))
# Vaccine = sapply(Vaccine, as.integer)
# Vaccine$County <- CountyLookup[
#     match(Vaccine$RECIP_ADDRESS_COUNTY,
#           CountyLookup$RECIP_ADDRESS_COUNTY),2]
Vaccine = Vaccine %>%
arrange(County)
temp1 = colTotal(Vaccine[,-grep("County", colnames(Vaccine))])
Vaccine <- rbind(Vaccine, c( temp1,"Totals"))
# CompleteVaccination[,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination)+1,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination),1] = as.character(Sys.Date())
write.csv(CompleteVaccination, "CountyData/Vaccine.csv", row.names = F)
# VaccineNames = colnames(Vaccine)
# for(i in 2:ncol(Vaccine)){
#     a = VaccineNames[i]
#     temp = Vaccine[,c("County",a)]
#     temp[,a] = as.integer(temp[,a])
#     temp = rbind(c("Date",mydate), temp)
#     temp = t(temp)
#     temp1 = read.csv(paste("CountyData/",a,
#                           "Data.csv", sep=" "), header = T,
#              stringsAsFactors = FALSE)
#     rownames(temp1) = temp1[,1]
#     temp1 = temp1[,-1]
#     if(temp1[nrow(temp1),1]!= temp[2,1]){
#         temp = rbind(temp1,temp[2,])
#     }
#     assign(a,temp)
#     write.csv(temp, paste("CountyData/",a,
#      "Data.csv", sep=" "))
# rm(temp, temp1)
#}
#`r if(today$New.Deaths >=1) {"The newly recorded deaths occurred on "}` `r if(today$New.Deaths >=1) {NDeaths[NDeaths$change != 0,"NewD"]}`
no = 31
OldDeaths <- read.csv(paste0("Total Deaths",no,".csv"))
# OldDeaths <- read.csv(paste0("Total Deaths",day(mydate-1),".csv"))
OldDeaths[,1] = as.Date(OldDeaths[,1])
# weekOldDeaths <- read.csv(paste0("Total Deaths",day(mydate-7),".csv"))
# weekOldDeaths[,1] = as.Date(OldDeaths[,1])
n = "01"
NewDeaths <- read.csv(paste0("Total Deaths",n,".csv"))
# NewDeaths <- read.csv(paste0("Total Deaths",day(mydate),".csv"))
NewDeaths[,1] = as.Date(NewDeaths[,1])
NDeaths = as.data.frame(merge(NewDeaths, OldDeaths, by ="EventDateOfDeath", all=T))
NDeaths[is.na(NDeaths)] <- 0
NDeaths = NDeaths %>% mutate(change = Total.Deaths...Daily.Total.x
-Total.Deaths...Daily.Total.y,
NewD = paste0(EventDateOfDeath," (",change,")"))
NDeaths[NDeaths$change != 0,"NewD"]
# NweekDeaths = as.data.frame(merge(NewDeaths, weekOldDeaths, by ="EventDateOfDeath"))
# NweekDeaths = NweekDeaths %>% mutate(change = Total.Deaths...Daily.Total.x
#                              -Total.Deaths...Daily.Total.y)
# NweekDeaths[NweekDeaths$change != 0,1]
day = as.Date(day)
pactive <- qplot(date, Still.Sick, data = clean[-(1:23),], geom = "point") +
ggtitle("Known Active COVID-19 Cases in Iowa") +
xlab("Date")+
ylab("Active Cases")+
geom_hline(yintercept = oldactive, color = "red")
# geom_text(
#   aes(x= anydate(clean$date[1])+80, y= oldactive,
#       label = as.Date(day)-365, vjust = -0.5),
#   colour = "black")
png(paste(day,"pactive.png"))
pactive
dev.off()
pactive
ppositive <-qplot(date, New.Percent.Positive, data = clean[-(1:7),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
ggtitle("Fraction of Positive COVID-19 Tests in Iowa")
png(paste(day,"ppositive.png"))
ppositive
dev.off()
ppositive
# p7positive <-qplot(date, Week.Positivity.Rate, data = clean[-(1:20),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
# ggtitle("7 day average of Fraction of Positive COVID-19 Tests in Iowa")
# png(paste(day,"p7positive.png"))
#
# p7positive
# dev.off()
# p7positive
State_Average_Active <- today$Still.Sick/IowaPop*100000
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=180),
#                 geom = c("point", "smooth")
) +
ggtitle("Known Active COVID-19 Cases in Bremer County")
#    "Known Active COVID-19 Cases in Bremer County")
#+  geom_hline(aes(yintercept=State_Average_Active)
pButler <-qplot(date,
#Butler.SS/Butler_Population*100000,
Butler.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Butler County")
ggtitle("Known Active COVID-19 Cases in Butler County Per 100,000 People")
#+  geom_hline(aes(yintercept=State_Average_Active)
png(paste(day,"pButler.png"))
pButler
dev.off()
pButler
pBlackHawk <-qplot(date,
#Butler.SS/Butler_Population*100000,
BlackHawk.SS,
data = tail(clean, n=120), geom = c("point", "smooth")) +
ggtitle("Known Active COVID-19 Cases in Black Hawk County")
png(paste(day,"pBlackHawk.png"))
pBlackHawk
dev.off()
pBlackHawk
png(paste(day,"pBremer.png"))
pBremer
dev.off()
pBremer
day7pos.Bremer <- round(
BremerData[nrow(BremerData), ncol(BremerData)]*100, digits=1)
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
# AC = as.integer(lastrow["Active"])
# H = as.integer(lastrow["Hospitalized"])
# NP = as.integer(lastrow["New.Pos"])
# PR = as.numeric(round(lastrow["Frac.Pos"]*100, digits = 2))
# ND = as.integer(lastrow["New.Deaths"])
# T = as.integer(lastrow["New.Test"])
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(clean[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 15
Risk <- Risk %>% mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
require(reshape2)
mydate <- Sys.Date()
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[
county$STATE=="Iowa"&county$COUNTY=="Black Hawk",
][,3]
year_reference = subset(BremerData, date == (day-365))$Active/Bremer_Population*10^5
temp = clean[,c("date","Bremer.SS", "Butler.SS", "BlackHawk.SS")]
temp = temp %>% mutate(Bremer = Bremer.SS/Bremer_Population$Population*100000,
Butler = Butler.SS/Butler_Population$Population* 100000,
BlackHawk = BlackHawk.SS/BlackHawk_Population$Population * 100000)
temp = tail(temp, n=90)
mtemp = melt(temp, id.vars = "date",
measure.vars = c('Bremer', 'Butler', 'BlackHawk'))
printplot <- qplot(as.Date(date), value, color = variable, data = mtemp, geom = "point") +
geom_smooth(span = 0.3, se = TRUE) +
ylab("Cases per 100,000") +
labs(color = "County", title = paste("Active Cases Per 100,000", mydate))
# +geom_hline(yintercept = year_reference,
#            color = "red") +
# geom_text(
#   aes(x= temp$date[1]+20, y= year_reference,
#       label = day-365, vjust = -0.5),
#   colour = "black")
print(printplot)
ggsave(paste(day,"BBBCounties.png"), plot = printplot)
# ggsave("BBBCounties.png")
#
png(paste(day,"BBBCounties.png"))
print(printplot)
dev.off()
# colnames(BremerData) = CountyDataLongNames
lastrow <- BremerData[nrow(BremerData),]
kable(t(lastrow[-1]), digits = 2)
kable(BremerData[,1:7])
day
temp = read.csv("Summary.csv")
temp04 = as.data.frame(temp) %>%
arrange(County)%>%
mutate(Active = Total.Positive.Tests
- Total.Recovered
- Total.Deaths,
Date = as.Date("2022-01-04"))
temp = as.data.frame(temp) %>%
arrange(County)
temp = temp04[,-1]-temp28[,-1]
temp = temp %>%
mutate(County = temp28[,1])%>%
mutate(
New.Daily.Tests = Total.Tests/as.numeric(Date),
New.Daily.Positive = Total.Positive.Tests/as.numeric(Date),
New.Daily.Recovered = Total.Recovered/as.numeric(Date)
)
View(temp)
View(temp04)
temp = temp04[,-1]-temp28[,-1]
temp = cbind(tenp04[,1], temp)
temp = temp %>%
mutate(
Percent.Daily.Tests = Total.Tests/as.numeric(Date),
Percent.Daily.Positive = Total.Positive.Tests/as.numeric(Date),
Percent.Daily.Recovered = Total.Recovered/as.numeric(Date)
)
temp
tail(temp[,1:4])
temp = cbind(temp04[,1], temp)
tail(temp[,1:4])
temp = temp04[,-1]-temp28[,-1]
temp = cbind(County = temp04[,1], temp)
temp = temp %>%
mutate(
Percent.Daily.Tests = Total.Tests/as.numeric(Date),
Percent.Daily.Positive = Total.Positive.Tests/as.numeric(Date),
Percent.Daily.Recovered = Total.Recovered/as.numeric(Date)
)
tail(temp[,1:4])
d_temp = as.data.frame(t(temp))
names(d_temp) = temp04[,1]
d_temp = cbind(Date = as.Date("2021-12-28"), d_temp)
New.Tests = rbind(Total.Tests,d_temp["Total.Tests",])
New.Positive.Tests = rbind(Total.Positive.Tests, d_temp["Total.Positive.Tests",])
New.Recovered = rbind(Total.Recovered, d_temp["Total.Recovered",])
New.Deaths =rbind(Total.Deaths, d_temp["Total.Deaths ",])
View(New.Positive.Tests)
New.Tests[2,1] = as.Date("2022-01-04")
New.Positive.Tests[2,1] = as.Date("2022-01-04")
New.Recovered[2,1] = as.Date("2022-01-04")
New.Deaths[2,1] = as.Date("2022-01-04")
date
year(date)
day(date)
day(date-7)
TestsNew = as.data.frame(temp) %>%
arrange(County)%>%
mutate(Active = Total.Positive.Tests
- Total.Recovered
- Total.Deaths,
Date = as.Date(date))
temp = read.csv("Summary.csv")
TestsNew = as.data.frame(temp) %>%
arrange(County)%>%
mutate(Active = Total.Positive.Tests
- Total.Recovered
- Total.Deaths,
Date = as.Date(date))
View(TestsNew)
New.Tests = rbind(New.Tests,d_temp["Total.Tests",]) %>%
unique()
View(New.Tests)
New.Tests = New.Tests[-3,]
New.Positive.Tests = rbind(New.Positive.Tests, d_temp["Total.Positive.Tests",])
temp = TestsNew[,-1]-temp28[,-1]
temp = cbind(County = temp04[,1], temp)
temp = temp %>%
mutate(
Percent.Daily.Tests = Total.Tests/as.numeric(Date),
Percent.Daily.Positive = Total.Positive.Tests/as.numeric(Date),
Percent.Daily.Recovered = Total.Recovered/as.numeric(Date)
)
d_temp = as.data.frame(t(temp))
names(d_temp) = temp04[,1]
d_temp = cbind(Date = as.Date(date), d_temp)
New.Tests = rbind(New.Tests,d_temp["Total.Tests",]) %>%
unique()
tail(New.Positive.Tests[,1:4])
New.Positive.Tests = New.Positive.Tests[-3,]
New.Positive.Tests = rbind(New.Positive.Tests, d_temp["Total.Positive.Tests",])%>%
unique()
tail(New.Positive.Tests[,1:4])
write.csv(New.Tests, "NewTests.csv",row.names = FALSE)
write.csv(New.Positive.Tests, "NewPositiveTests.csv",row.names = FALSE)
write.csv(New.Recovered, "NewRecovered.csv",row.names = FALSE)
write.csv(New.Deaths, "NewDeaths.csv",row.names = FALSE)
read.csv("NewTests.csv",New.Tests,row.names = FALSE)
New.Tests = read.csv("NewTests.csv", row.names = FALSE)
New.Tests = read.csv("NewTests.csv")
View(New.Tests)
TestsOld = TestsNew
New.Tests[,"Bremer"]
New.Tests[nrow(New.Tests),"Bremer"]
New.Positive.Tests[nrow(New.Positive.Tests),"Bremer"]
New.Tests = read.csv("NewTests.csv")
New.Positive.Tests = read.csv("NewPositiveTests.csv")
New.Recovered = read.csv(, "NewRecovered.csv")
New.Deaths = read.csv("NewDeaths.csv")
New.Recovered = read.csv("NewRecovered.csv")
New.Positive.Tests[nrow(New.Positive.Tests),"Bremer"]
New.Positive.Tests[nrow(New.Positive.Tests),"Bremer"]/New.Tests[nrow(New.Tests),"Bremer"]
round(New.Positive.Tests[nrow(New.Positive.Tests),"Bremer"]/New.Tests[nrow(New.Tests),"Bremer"]*100, digits = 2)
New.Positive.Tests[nrow(New.Positive.Tests),"Black Hawk"]
New.Positive.Tests[nrow(New.Positive.Tests),"Black.Hawk"]
