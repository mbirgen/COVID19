require(anytime)
#  require(readxl)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
require(readr)
county = read_csv("censusCounties.csv")
## Select data for only Iowa Counties
county = subset(county, STATE == "Iowa")
date = Sys.Date()
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
names(covid19)[1] <- "date"
covid19$date = anydate(covid19$date)
source("HospitalData.R")
tail(inpatientSave[,0:3])
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
source("LoadSummary.R")
source("LoadBigCSV.R")
tail(Positive[,1:4])
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
# write.csv(temp, paste("CountyData/",county_names[i],
# "Data.csv", sep=""))
# write.csv(Tested, "CountyData/CountyTests.csv")
write.csv(Positive, "CountyData/CountyPositive.csv")
write.csv(Positive.Tests, "CountyData/CountyPositiveTests.csv")
# write.csv(Recovered, "CountyData/CountyRecovered.csv")
write.csv(Deaths, "CountyData/CountyDeaths.csv")
# write.csv(Active, "CountyData/CountyActive.csv")
# qplot(date, New.Positive.Tests, data = tail(covid19, n=40))+geom_smooth(span = 0.3, se = TRUE)
qplot(date, hospitalized, data = tail(covid19, n=80))+geom_smooth(span = 0.3, se = TRUE)
##############################################
mergedYearonYearHospMeans = covid19 %>%
drop_na(hospitalized) %>%
select("date","hospitalized") %>%
mutate(week = week(date),
year = year(date)) %>%
group_by(year, week) %>%
summarise_at(vars(hospitalized), list(WeeklyAve = mean))
qplot(week, WeeklyAve, data=mergedYearonYearHospMeans, color = factor(year)) + xlab("Week of Year") + ylab("Weekly Average Hospitalized")+geom_smooth(span = 0.3, se = TRUE)
i=as.Date(date)
# i = as.Date("2022-06-08")
covid19[covid19$date == i,
c("Bremer.Positive",
"Bremer.Recovered",
"Bremer.Death")]=
BremerData[BremerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("Butler.P", "Butler.R",
"Butler.D")]=
ButlerData[ButlerData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
covid19[covid19$date == i,
c("BlackHawk.P", "BlackHawk.R" ,
"BlackHawk.D")]=
Black.HawkData[Black.HawkData$date==i,
c( "Positive",  "Recovered",
"Deaths")]
# covid19[covid19$date == as.Date(date),"Total.Tested"] =
#     Tested[anydate(Tested$date) == date,"Totals"]
#
covid19[covid19$date == as.Date(date),"positive"] =
Positive[anydate(Positive$date) == date,"Totals"]
# covid19[covid19$date == as.Date(date),"Recovered"] =
#     Recovered[anydate(Recovered$date) == date,"Totals"]
covid19[covid19$date == as.Date(date),"deaths"] = Deaths[anydate(Deaths$date) == as.Date(date),"Totals"]
covid19[,"Recovered"] =
monthvalue("positive", covid19) - monthvalue("deaths", covid19)
covid19[-1] = sapply(covid19[,-1], as.numeric)
covid19 = covid19 %>%
mutate(Bremer.SS = Bremer.Positive-Bremer.Death - Bremer.Recovered,
Butler.SS = Butler.P - Butler.R,
BlackHawk.SS = BlackHawk.P- BlackHawk.D - BlackHawk.R)
covid19[covid19$date == as.Date(date),"New.Deaths"] = tail(unique(sort(covid19$deaths)),1)[1]-tail(unique(sort(covid19$deaths)),2)[1]
write.csv(covid19, "covid19.csv",row.names = FALSE, na="")
source("FillData2.R")
#######################################
##  Create Clean Dataset
#######################################
clearn <- !is.na(covid19$positive)
clean <- covid19[clearn,]
clean$date = as.Date(clean$date)
cdeaths <- covid19[!is.na(covid19$deaths),]
clean[500:nrow(clean),"New.Positive"] = weeklag("positive", clean)[500:nrow(clean)]
clean[500:nrow(clean),"New.Deaths"] = weeklag("deaths", clean)[500:nrow(clean)]
# clean <- clean %>% mutate(
#   negative = Total.Tested - positive,
#   New.Positive = positive - lag(positive),
#   New.Negative = negative - lag(negative),
#   new.hospital = hospitalized - lag(hospitalized),
#   Total.Daily.Tests = Total.Tested - lag(Total.Tested),
#   New.Deaths = deaths - lag(deaths),
#   Still.Sick = positive - Recovered - deaths,
#   time.change = date - lag(date)
# )
clean <- clean %>% mutate(
# negative = Total.Tested - positive,
# Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
# np_7day = (positive - lag(positive, n=7))/7,
# New.Percent.Positive = New.Positive/Total.Daily.Tests,
time.change = date - lag(date),
Percent.Hospitalized = hospitalized/Still.Sick*100,
np_day = New.Positive/as.integer(time.change)
)
# clean <- clean %>% mutate(
# New.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
# New.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
# New.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
# New.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
# )
clean[500:nrow(clean),"New.Positive.Tests"] = weeklag("Positive.Tests", clean)[500:nrow(clean)]
clean[500:nrow(clean),"New.Bremer.Positive.Tests"] = weeklag("Bremer.Positive.Tests", clean)[500:nrow(clean)]
today <- clean[nrow(clean),]
day <- today$date
temp = tail(statedata[,"Individuals.Tested"],n=2)
new_pos <- today$New.Positive
# percent_pos <- round(today$New.Positive/today$New.Positive.Tests*100, digits = 1)
percent_pos7 <- round(clean$Week.Positivity.Rate[nrow(clean)-4]*100, digits = 1)
percent_hospital <- round(clean$Percent.Hospitalized[nrow(clean)], digits = 1)
# percent_hospital <- clean$Percent.Hospitalized[nrow(clean)]
ICU <- today$ICU
percent_ICU <- round(today$ICU/today$hospitalized*100, digits = 1)
sick <- format(today$Still.Sick, scientific = FALSE, big.mark=",")
IowaPop <- 3155070
# test.positivity = round(sum(New.Positive.Tests["Total.Positive.Tests",-1])/sum(New.Tests["Total.Tests",-1])*100,digits = 1)
# clean = clean %>% mutate(
#   Individuals.Reported = Individuals.Tested - lag(Individuals.Tested),
#   Individuals.Positive = Individuals.Postive - lag(Individuals.Postive),
#   Bremer.Rep = Bremer.Individuals.Tested - lag(Bremer.Individuals.Postive))
write.csv(clean, "clean.csv")
write.csv(BremerData, "CountyData/BremerData.csv")
maxtoday = data.frame(colMax(clean[,-1]) == today[,-1])
temp = subset(clean, date == (as.Date(day)-365))
oldactive = temp$positive-temp$Recovered-temp$deaths
rm(temp)
# week.new.pos = round(new_pos/7, digits = 1)
Active = clean$positive - monthvalue("positive",clean) + monthvalue("deaths",clean)[nrow(clean)] -
clean$deaths
# Vaccine Information
colTotal <- function(data) sapply(data, sum, na.rm = TRUE)
CountyLookup = as.data.frame(read.csv("CountyLookUp.csv", stringsAsFactors=F, col.names = c("RECIP_ADDRESS_COUNTY", "County")))
CompleteVaccination = read.csv("CountyData/Vaccine.csv", stringsAsFactors = F)
Vaccine = as.data.frame(read.csv("Vaccine Series Completion by Recipient County of Residence.csv", stringsAsFactors=F))
# Vaccine = sapply(Vaccine, as.integer)
# Vaccine$County <- CountyLookup[
#     match(Vaccine$RECIP_ADDRESS_COUNTY,
#           CountyLookup$RECIP_ADDRESS_COUNTY),2]
Vaccine = Vaccine %>%
arrange(County)
temp1 = colTotal(Vaccine[,-grep("County", colnames(Vaccine))])
Vaccine <- rbind(Vaccine, c( temp1,"Totals"))
# CompleteVaccination[,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination)+1,-1] = t(Vaccine$Vaccinations.Completed[-1])
CompleteVaccination[nrow(CompleteVaccination),1] = as.character(Sys.Date())
write.csv(CompleteVaccination, "CountyData/Vaccine.csv", row.names = F)
# VaccineNames = colnames(Vaccine)
# for(i in 2:ncol(Vaccine)){
#     a = VaccineNames[i]
#     temp = Vaccine[,c("County",a)]
#     temp[,a] = as.integer(temp[,a])
#     temp = rbind(c("Date",mydate), temp)
#     temp = t(temp)
#     temp1 = read.csv(paste("CountyData/",a,
#                           "Data.csv", sep=" "), header = T,
#              stringsAsFactors = FALSE)
#     rownames(temp1) = temp1[,1]
#     temp1 = temp1[,-1]
#     if(temp1[nrow(temp1),1]!= temp[2,1]){
#         temp = rbind(temp1,temp[2,])
#     }
#     assign(a,temp)
#     write.csv(temp, paste("CountyData/",a,
#      "Data.csv", sep=" "))
# rm(temp, temp1)
#}
#`r if(today$New.Deaths >=1) {"The newly recorded deaths occurred on "}` `r if(today$New.Deaths >=1) {NDeaths[NDeaths$change != 0,"NewD"]}`
no = day(date-7)
OldDeaths <- read.csv(paste0("Total Deaths",no,".csv"))
# OldDeaths <- read.csv(paste0("Total Deaths",day(mydate-1),".csv"))
OldDeaths[,1] = as.Date(OldDeaths[,1])
# weekOldDeaths <- read.csv(paste0("Total Deaths",day(mydate-7),".csv"))
# weekOldDeaths[,1] = as.Date(OldDeaths[,1])
n = day(date)
NewDeaths <- read.csv(paste0("Total Deaths",n,".csv"))
# NewDeaths <- read.csv(paste0("Total Deaths",day(mydate),".csv"))
NewDeaths[,1] = as.Date(NewDeaths[,1])
NDeaths = as.data.frame(merge(NewDeaths, OldDeaths, by ="EventDateOfDeath", all=T))
NDeaths[is.na(NDeaths)] <- 0
NDeaths = NDeaths %>% mutate(change = Total.Deaths.x
-Total.Deaths.y,
NewD = paste0(EventDateOfDeath," (",change,")"))
NDeaths[NDeaths$change != 0,"NewD"]
# NweekDeaths = as.data.frame(merge(NewDeaths, weekOldDeaths, by ="EventDateOfDeath"))
# NweekDeaths = NweekDeaths %>% mutate(change = Total.Deaths...Daily.Total.x
#                              -Total.Deaths...Daily.Total.y)
# NweekDeaths[NweekDeaths$change != 0,1]
day = as.Date(day)
pactive <- qplot(date, Still.Sick, data = clean[-(1:23),], geom = "point") +
ggtitle("Known Active COVID-19 Cases in Iowa") +
xlab("Date")+
ylab("Active Cases")+
geom_hline(yintercept = oldactive, color = "red")
# geom_text(
#   aes(x= anydate(clean$date[1])+80, y= oldactive,
#       label = as.Date(day)-365, vjust = -0.5),
#   colour = "black")
png(paste(day,"pactive.png"))
pactive
dev.off()
pactive
ppositive <-qplot(date, New.Percent.Positive, data = clean[-(1:7),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
ggtitle("Fraction of Positive COVID-19 Tests in Iowa")
png(paste(day,"ppositive.png"))
ppositive
dev.off()
ppositive
# p7positive <-qplot(date, Week.Positivity.Rate, data = clean[-(1:20),], geom = c("point", "smooth")) + ylab("Fraction Positive") +
# ggtitle("7 day average of Fraction of Positive COVID-19 Tests in Iowa")
# png(paste(day,"p7positive.png"))
#
# p7positive
# dev.off()
# p7positive
State_Average_Active <- today$Still.Sick/IowaPop*100000
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
pBremer <-qplot(date,
Bremer.SS,
data = tail(clean, n=180),
#                 geom = c("point", "smooth")
) +
ggtitle("Known Active COVID-19 Cases in Bremer County") +
geom_smooth(span = 0.3, se = TRUE)
#    "Known Active COVID-19 Cases in Bremer County")
#+  geom_hline(aes(yintercept=State_Average_Active)
pButler <-qplot(date,
#Butler.SS/Butler_Population*100000,
Butler.SS,
data = tail(clean, n=120), geom = "point") +
ggtitle("Known Active COVID-19 Cases in Butler County") + geom_smooth(span = 0.3, se = TRUE)
ggtitle("Known Active COVID-19 Cases in Butler County Per 100,000 People")
#+  geom_hline(aes(yintercept=State_Average_Active)
png(paste(day,"pButler.png"))
pButler
dev.off()
pButler
pBlackHawk <-qplot(date,
#Butler.SS/Butler_Population*100000,
BlackHawk.SS,
data = tail(clean, n=120), geom = "point") +
geom_smooth(span = 0.3, se = TRUE) +
ggtitle("Known Active COVID-19 Cases in Black Hawk County")
png(paste(day,"pBlackHawk.png"))
pBlackHawk
dev.off()
pBlackHawk
png(paste(day,"pBremer.png"))
pBremer
dev.off()
pBremer
day7pos.Bremer <- round(
BremerData[nrow(BremerData), ncol(BremerData)]*100, digits=1)
# mydate <- Sys.Date()
# hosp_by_county <- pdf_text("hosp_by_county.pdf") %>%
#     readr::read_lines() %>% str_squish()
# # hosp_by_county <-    str_squish(hosp_by_county)
# temp <- hosp_by_county
# hosp_by_county <- temp[5:37]
# temp1 = strsplit(temp[41]," ") %>% ldply()
# date = as.character(mdy(temp1[3]))
#
# hosp_by_county <-hosp_by_county %>%
#     strsplit("(?= [A-Za-z])(?<=[0-9])|(?= [0-9])(?<=[A-Za-z])", perl=TRUE)
#
# hosp_by_county_df <- plyr::ldply(hosp_by_county)
# temp1 <- hosp_by_county_df[,1:2]
# temp2 <- hosp_by_county_df[,3:4]
# temp3 <- hosp_by_county_df[,5:6]
# colnames(temp2) <- names(temp1)
# colnames(temp3) <- names(temp1)
# hosp_by_county <- rbind(temp1, temp2, temp3)
# colnames(hosp_by_county) <- c("County", "Hospitalized")
# hosp_by_county <-hosp_by_county %>%
#     mutate(Hospitalized = as.numeric(Hospitalized))
# temp1 = sum(hosp_by_county[,2])
# hosp_by_county <- rbind(hosp_by_county, c("Totals", temp1))
# rm(temp1, temp2, temp3, hosp_by_county_df)
#
# rownames(hosp_by_county) <- hosp_by_county[,1]
#
# hospital <- as.data.frame(read.csv("CountyHospitilizations.csv"))
# hospital <- hospital[,-1]
# #hospital[,1] = mdy(hospital[,1])
# h_county <-  t(hosp_by_county[,2])
#
# colnames(h_county) <-  hosp_by_county[,1]
# h_county <- cbind(date = c(date, h_county))
# rownames(h_county) <- colnames(hospital)
# h_county <- t(h_county)
# # if(mydate1== date){
#     hospital <- rbind(hospital, h_county)
# # } else {
# #   temp <-hospital[,1]== date
# #   temp1 <- (1:600)[temp][1]
# #   hospital[temp1,] <- h_county
# #   if(as.character(hospital[nrow(hospital),1]) != mydate1){
#   # hospital <- rbind.fill(hospital, data.frame(Date = date))
# #   }
# # }
# hospital <- unique(hospital)
#
# write.csv(hospital, "CountyHospitilizations.csv")
# hospital <- hospital[!is.na(hospital$Adair),]
# ## Change Date on pdf file
# Summary <- pdf_text(
#     "access _ Iowa COVID-19 Information08.pdf") %>%
#     readr::read_lines() %>% str_squish()
# Summary = Summary[!Summary == ""]
# temp1 = Summary[6] %>% ldply()
# date = as.character(mdy(temp1[1]))
# # Summary[79] = paste(Summary[79], Summary[80])
# Summary <- str_remove_all(Summary, " Translate") %>%
#     str_remove_all("Translate")
# # Summary[79] = paste(Summary[79], Summary[80])
# CountyDataOld <- Summary[46:150]
# CountyDataOld <- CountyDataOld %>%
# strsplit("(?= [A-Za-z])(?<=[0-9])|(?= [0-9])(?<=[A-Za-z])", perl=TRUE)
#
#
# # CountyDataOld <- Summary[46:151] %>%
# #     strsplit("(?= [A-Za-z])(?<=[0-9])|(?= [0-9])(?<=[A-Za-z])", perl=TRUE)
# # CountyDataOld <- CountyDataOld[-c(10:11,71:72)]
# # temp1 = CountyDataOld[44:45]
# # temp2 = plyr::ldply(temp1[1])
# # temp2[,2]=paste0(temp2[,2],plyr::ldply(temp1[2]) )
# # CountyDataOld <- CountyDataOld[-c(35:37,89,91:92)]
# CountyDataOld <- CountyDataOld[-c(35:36,88, 90:91)]
# CountyDataOld1 <- plyr::ldply(CountyDataOld[-100])
# CountyDataOld1[100,] = CountyDataOld[[100]]
# # ]CountyDataOld = rbind(CountyDataOld,temp2)
# temp <- strsplit(CountyDataOld1[,2], " ", fixed = TRUE)
# temp <- plyr::ldply(temp)
# temp[,1] = CountyDataOld1[,1]
# colnames(temp) = c("County", "Individuals.Tested","Individuals.Positive",
#                    "Total.Recovered", "Total.Deaths")
# CountyDataOld <- temp
# CountyDataOld[-1] = sapply(CountyDataOld[-1], as.integer)
# CountyDataOld <- as.data.frame(CountyDataOld) %>%
#     arrange(County)%>%
#     mutate(Active = Individuals.Positive - Total.Recovered - Total.Deaths,
#            positivity = Individuals.Positive/Individuals.Tested,
#            date = as.Date(date),
#     )
#
# temp <-c(County = "Totals",
#          colSums(CountyDataOld[,2:6]),
#          positivity = NA,
#          date = as.character(date))
# temp["positivity"] = as.integer(temp["Individuals.Positive"])/as.integer(temp["Individuals.Tested"])
# CountyDataOld[101,] = temp
# CountyDataOld[,2:6] = sapply(CountyDataOld[,2:6], as.integer)
# CountyDataOld[,7] = sapply(CountyDataOld[,7], as.numeric)
# # CountyDataOld = CountyDataOld[-100,]
# write.csv(CountyDataOld, file = paste(
#     'CountyData/',date,'CountyData.csv'))
#
# #More interesting information
# # tempnames =Summary[seq(7,21, 2)]
# # tempnames1 = Summary[seq(26,40,2)]
# # tempnames = c(tempnames, tempnames1)
# # tempdata =Summary[seq(8,20, 2)]
# # tempdata1 =Summary[seq(25,41, 2)]
# tempnames =Summary[seq(7,17, 2)]
# tempnames1 = Summary[seq(22,36,2)]
# # tempnames2 = Summary[seq(40,42,2)]
# tempnames2 = Summary[seq(41,43,2)]
# tempnames = c(tempnames, tempnames1, tempnames2)
# tempdata =Summary[seq(8,16, 2)]
#
# tempdata1 =Summary[seq(21,35, 2)]
# tempdata2 =Summary[seq(40,44, 2)]
# tempdata = c(tempdata, tempdata1, tempdata2)
# tempdata = plyr::ldply(as.integer(
#   gsub(",","",tempdata)))
# tempdata = t(tempdata)
# colnames(tempdata) <- tempnames
# tempdata = cbind("date"=date, tempdata)
# statedata <- read.csv(paste(
#   'CountyData/StateData.csv'),
#                    stringsAsFactors = FALSE)
# # statedata = rbind(statedata, tempdata)
# if (statedata$date[nrow(statedata)] != tempdata[1]){
# statedata[nrow(statedata)+1,]=tempdata
# }
# statedata[,-1] = sapply(statedata[,-1], as.integer)
# statedata = unique(statedata)
# write.csv(statedata, file = paste(
#     'CountyData/StateData.csv'),
#     row.names = FALSE)
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
require(knitr)
day <- Sys.Date()
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Black Hawk",][,3]
Linn_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Linn",][,3]
Johnson_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Johnson",][,3]
Bremerlastrow <- BremerData[nrow(BremerData),]
Black.Hawklastrow <- Black.HawkData[nrow(Black.HawkData),]
Butlerlastrow <- ButlerData[nrow(ButlerData),]
# AC = as.integer(lastrow["Active"])
# H = as.integer(lastrow["Hospitalized"])
# NP = as.integer(lastrow["New.Pos"])
# PR = as.numeric(round(lastrow["Frac.Pos"]*100, digits = 2))
# ND = as.integer(lastrow["New.Deaths"])
# T = as.integer(lastrow["New.Test"])
Brtemp = data.frame(colMax(BremerData) == Bremerlastrow)
BHtemp = data.frame(colMax(Black.HawkData) == Black.Hawklastrow)
Butemp = data.frame(colMax(ButlerData) == Butlerlastrow)
todaytemp = data.frame(colMax(covid19[,-1]) == today[,-1])
###########Risk Calculation#####################
groupsize = 100
Risk <- Risk %>% mutate(Bremer.Prob = Bremerlastrow$Active/Bremer_Population
, 'Black.Hawk.Prob' = Black.Hawklastrow$Active/BlackHawk_Population,
'Butler.Prob' = Butlerlastrow$Active/Butler_Population,
'WSR.Prob' = (Butlerlastrow$Active+ Bremerlastrow$Active)/(Butler_Population+ Bremer_Population),
'Linn.Prob' = LinnData[nrow(LinnData),]$Active/Linn_Population,
'Johnson.Prob' = JohnsonData[nrow(JohnsonData),]$Active/Johnson_Population)
Risk = Risk %>% mutate(
Bremer.Risk = 1-(1-Bremer.Prob*5)^groupsize,
Black.Hawk.Risk = 1-(1-Black.Hawk.Prob*5)^groupsize,
Butler.Risk = 1-(1-Butler.Prob*5)^groupsize,
WSR.Risk = 1-(1-WSR.Prob*5)^groupsize,
Johnson.Risk = 1-(1-Johnson.Prob*5)^groupsize,
Linn.Risk = 1-(1-Linn.Prob*5)^groupsize
)
#  Two years ago, we had `r subset(BremerData, date == (day-730))$Active` active cases and  `r subset(BremerData, date == (day-730))$New.Pos` new positive patients in Bremer County.
require(reshape2)
mydate <- Sys.Date()
graphlength = 90
Bremer_Population <- county[county$COUNTY=="Bremer",][,3]
Butler_Population <- county[county$STATE=="Iowa"&county$COUNTY=="Butler",][,3]
BlackHawk_Population <- county[
county$STATE=="Iowa"&county$COUNTY=="Black Hawk",
][,3]
year_reference = subset(BremerData, date == (day-365))$Active/Bremer_Population*10^5
temp = covid19[,c("date","Bremer.SS", "Butler.SS", "BlackHawk.SS")]
temp = temp %>% mutate(Bremer = Bremer.SS/Bremer_Population$Population*100000,
Butler = Butler.SS/Butler_Population$Population* 100000,
BlackHawk = BlackHawk.SS/BlackHawk_Population$Population * 100000)
# temp = tail(temp, n=graphlength)
temp = temp[temp$date >= (mydate-graphlength),]
mtemp = melt(temp, id.vars = "date",
measure.vars = c('Bremer', 'Butler', 'BlackHawk'))
printplot <- qplot(as.Date(date), value, color = variable, data = mtemp, geom = "point") +
geom_smooth(span = 0.3, se = TRUE) +
ylab("Cases per 100,000") +
xlab("Date")+
labs(color = "County", title = paste("Active Cases Per 100,000", mydate))
# +geom_hline(yintercept = year_reference,
#            color = "red") +
# geom_text(
#   aes(x= temp$date[1]+20, y= year_reference,
#       label = day-365, vjust = -0.5),
#   colour = "black")
print(printplot)
ggsave(paste(day,"BBBCounties.png"), plot = printplot)
# ggsave("BBBCounties.png")
#
# png(paste(day,"BBBCounties.png"))
# print(printplot)
# dev.off()
# colnames(BremerData) = CountyDataLongNames
lastrow <- BremerData[nrow(BremerData),]
kable(t(lastrow[-1]), digits = 2)
kable(BremerData[,1:7])
printplot
date = Sys.Date()
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
names(covid19)[1] <- "date"
covid19$date = anydate(covid19$date)
source("HospitalData.R")
tail(inpatientSave[,0:3])
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
require(dplyr)
require(lubridate)
require(ggplot2)
require(zoo)
require(gsheet)
require(plyr)
require(pdftools)
require(tidyverse)
require(stringr)
require(anytime)
#  require(readxl)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
date = Sys.Date()
covid19 <- read.csv("covid19.csv",
stringsAsFactors = FALSE)
names(covid19)[1] <- "date"
covid19$date = anydate(covid19$date)
source("HospitalData.R")
tail(inpatientSave[,0:3])
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
tail(inpatientSave[,c("date","inpatient_beds_used_covid")],7)
