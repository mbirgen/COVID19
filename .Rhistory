temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day7.Perc = Day7.Pos/Day7.Test,
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14))
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14))
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
)
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths
)
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive)
)
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths)
)
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested)
)
names(temp[2]) = "Tested"
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14)
)
names(temp[2]) = "Tested"
names(temp[,2]) = "Tested"
temp = clean[, 1:6] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.integer)
names(temp)
names(temp) = c("date", "Tested", "Positive",
"Recovered", "Deaths", "Hospitalized")
temp = temp %>%
mutate(
Active = Positive - Recovered - Deaths,
New.Pos = Positive - lag(Positive),
New.Test = Tested - lag(Tested),
New.Rec = Recovered - lag(Recovered),
New.Deaths = Deaths - lag(Deaths),
Frac.Pos = New.Pos/New.Test,
Day7.Test = Tested - lag(Tested, n=7),
Day7.Pos = Positive - lag(Positive, n=7),
Day7.Rec = Recovered - lag(Recovered, n=7),
Day7.Death = Deaths - lag(Deaths, n=7),
Day7.Active = Active - lag(Active, n=7),
Day14.Test = Tested - lag(Tested, n=14),
Day14.Pos = Positive - lag(Positive, n=14),
Day14.Rec = Recovered - lag(Recovered, n=14),
Day14.Death = Deaths - lag(Deaths, n=14),
Day14.Active = Active - lag(Active, n=14)
)
temp2 = left_join(good_dates, temp)
good_dates = clean$date
temp2 = left_join(good_dates, temp)
temp2 = left_join(good_dates, temp, by = "date")
str(good_dates)
str(temp$date)
temp2 = join(good_dates, temp, by = "date)
""
)
"
temp2 = join(good_dates, temp, by = "date")
good_dates = as.data.frame( clean$date)
temp2 = join(good_dates, temp, by = "date")
temp2 = left_join(good_dates, temp, by = "date")
str(good_dates)
good_dates = as.data.frame("date" =clean$date)
good_dates = as.data.frame(date =clean$date)
good_dates = clean$date
names(good_dates) = "date"
temp2 = left_join(good_dates, temp, by = "date")
temp2 = merge(good_dates, temp, by = "date")
tail(good_dates)
good_dates = clean$date
tail(good_dates)
names(good_dates) = "date"
tail(good_dates)
good_dates = clean$date
good_dates = data.table(clean$date)
good_dates = as.data.table(clean$date)
good_dates = as.data.frame(clean$date)
tail(good_dates)
names(good_dates) = "date"
tail(good_dates)
temp2 = merge(good_dates, temp, by = "date")
tail(temp2)
names(temp2)
names(temp2,-(1:6))
names(temp2[,-(1:6)])
nam = names(temp2[,-(1:6)])
tail(temp2[,nam])
clean[,nam]
nam = names(temp2[,-(1:6)])
clean = cbind(clean, temp2[,nam])
qplot(date, Day7, data = clean)
qplot(date, Day7.Pos, data = clean)
names(clean)
mydate1 <- Sys.Date()
hosp_by_county <- pdf_text("hosp_by_county.pdf") %>%
readr::read_lines() %>% str_squish()
# hosp_by_county <-    str_squish(hosp_by_county)
temp <- hosp_by_county
hosp_by_county <- temp[5:37]
temp1 = strsplit(temp[40]," ") %>% ldply()
date = as.character(mdy(temp1[3]))
hosp_by_county <-hosp_by_county %>%
strsplit("(?= [A-Za-z])(?<=[0-9])|(?= [0-9])(?<=[A-Za-z])", perl=TRUE)
hosp_by_county_df <- plyr::ldply(hosp_by_county)
temp1 <- hosp_by_county_df[,1:2]
temp2 <- hosp_by_county_df[,3:4]
temp3 <- hosp_by_county_df[,5:6]
colnames(temp2) <- names(temp1)
colnames(temp3) <- names(temp1)
hosp_by_county <- rbind(temp1, temp2, temp3)
colnames(hosp_by_county) <- c("County", "Hospitalized")
hosp_by_county <-hosp_by_county %>%
mutate(Hospitalized = as.numeric(Hospitalized))
temp1 = sum(hosp_by_county[,2])
hosp_by_county <- rbind(hosp_by_county, c("Totals", temp1))
rm(temp1, temp2, temp3, hosp_by_county_df)
rownames(hosp_by_county) <- hosp_by_county[,1]
hospital <- as.data.frame(read.csv("CountyHospitilizations.csv"))
hospital <- hospital[,-1]
#hospital[,1] = mdy(hospital[,1])
h_county <-  t(hosp_by_county[,2])
colnames(h_county) <-  hosp_by_county[,1]
h_county <- cbind(date = c(date, h_county))
rownames(h_county) <- colnames(hospital)
h_county <- t(h_county)
if(mydate1== date){
hospital <- rbind(hospital, h_county)
} else {
temp <-hospital[,1]== date
temp1 <- (1:600)[temp][1]
hospital[temp1,] <- h_county
if(as.character(hospital[nrow(hospital),1]) != mydate1){
hospital <- rbind.fill(hospital, data.frame(Date = Sys.Date()))
}
}
hospital
tail(hospital[,1:4])
hospital <- rbind.fill(hospital, data.frame(Date = Sys.Date()))
tail(hospital[,1:4])
tail(temp)
date
temp <-hospital[,1]== date
temp1 <- (1:600)[temp][1]
hospital[temp1,] <- h_county
temp1
temp
hospital <- rbind(hospital, h_county)
tail(hospital[,1:4])
View(hospital)
hospital = hospital[-353,]
write.csv(hospital, "CountyHospitilizations.csv")
hospital <- hospital[!is.na(hospital$Adair),]
tail(hospital[,1:4])
date = seq.Date(min(clean$date),
max(clean$date), by = "day")
temp = clean[, 1:6] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.integer)
temp = temp %>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)
temp = temp %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered) %>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered) %>% mutate(
temp = temp %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
#  np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
#Week.Positivity = rollapply(New.Positive, 7, FUN=sum, fill = NA),
#Week.Tests = rollapply(Total.Daily.Tests, 7, FUN=sum, fill = NA),
Week.Positivity = positive - lag(positive, n=7),
Week.Tests = Total.Tested - lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tests - lag(Total.Tests,n=1),
Day.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
Day.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
Day.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
) %>% mutate(
wktot = Week.Positivity,
nd_7day = deaths - lag(deaths, n=7),
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
Week.Positivity = positive -
lag(positive, n=7),
Week.Tests = Total.Tested -
lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tested - lag(Total.Teststed,n=1),
Day.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
Day.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
Day.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
) %>% mutate(
wktot = Week.Positivity,
nd_7day = deaths - lag(deaths, n=7),
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
Week.Positivity = positive -
lag(positive, n=7),
Week.Tests = Total.Tested -
lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tested -
lag(Total.Tested,n=1),
Day.Positive.Tests = Positive.Tests - lag(Positive.Tests, n=1),
Day.Bremer.Total.Tests = Bremer.Total.Tests - lag(Bremer.Total.Tests,n=1),
Day.Bremer.Positive.Tests = Bremer.Positive.Tests - lag(Bremer.Positive.Tests, n=1),
) %>% mutate(
wktot = Week.Positivity,
nd_7day = deaths - lag(deaths, n=7),
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
Week.Positivity = positive -
lag(positive, n=7),
Week.Tests = Total.Tested -
lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tested -
lag(Total.Tested,n=1)
) %>% mutate(
wktot = Week.Positivity,
nd_7day = deaths - lag(deaths, n=7),
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
temp = clean[, 1:6] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.integer)
# names(temp) = c("date", "Tested", "Positive",
"Recovered", "Deaths", "Hospitalized")
temp = temp %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
date = seq.Date(min(clean$date),
max(clean$date), by = "day")
temp = clean[, 1:6] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.integer)
# names(temp) = c("date", "Tested", "Positive",
"Recovered", "Deaths", "Hospitalized")
temp = temp %>% mutate(
negative = Total.Tested - positive,
New.Positive = positive - lag(positive),
New.Negative = negative - lag(negative),
new.hospital = hospitalized - lag(hospitalized),
Total.Daily.Tests = Total.Tested - lag(Total.Tested),
New.Deaths = deaths - lag(deaths),
Still.Sick = positive - Recovered)
temp = temp%>% mutate(
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Week.Positivity.Rate = (positive - lag(positive, n=7))/(Total.Tested - lag(Total.Tested, n=7)),
Percent.Hospitalized = hospitalized/Still.Sick
)%>%
mutate(
negative = Total.Tested - positive,
Percent.Pos = positive/Total.Tested*100,
#np_7day = rollmean(New.Positive, k=7, align = "right", fill = NA),
np_7day = (positive - lag(positive, n=7))/7,
New.Percent.Positive = New.Positive/Total.Daily.Tests,
Percent.Hospitalized = hospitalized/Still.Sick*100
)%>% mutate(
Week.Positivity = positive -
lag(positive, n=7),
Week.Tests = Total.Tested -
lag(Total.Tested, n=7),
Week.Positivity.Rate = Week.Positivity/Week.Tests,
Week.Deaths = deaths - lag(deaths, n=7),
Day.Total.Tests = Total.Tested -
lag(Total.Tested,n=1)
) %>% mutate(
wktot = Week.Positivity,
pp_7day = (positive - lag(positive, n=7))/ (Total.Tested - lag(Total.Tested, n=7))#
)
good_dates = as.data.frame(clean$date)
names(good_dates) = "date"
temp2 = merge(good_dates, temp, by = "date")
View(temp2)
nam = names(temp2[,-(1:6)])
nam
clean[,nam]
date = seq.Date(min(covid19$date),
max(covid19$date), by = "day")
temp = covid19[, ] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp[,-1] = sapply(temp[,-1], as.integer)
View(temp)
temp = covid19[, ] %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp = covid19 %>%
complete(
date = seq.Date(min(clean$date),
max(clean$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp = covid19 %>%
complete(
date = seq.Date(min(covid19$date),
max(covid19$date), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp = covid19 %>%
complete(
date = seq.Date(min(as.Date(covid19$date)),
max(as.Date(covid19$date))), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp = covid19
temp[,-1] = sapply(temp[,-1], as.numeric)
temp = temp%>%
complete(
date = seq.Date(min(as.Date(covid19$date)),
max(as.Date(covid19$date))), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
temp
temp = covid19
temp[,-1] = sapply(temp[,-1], as.numeric)
str(temp[,1:5])
temp[,1] = as.Date(temp[,1])
str(temp[,1:5])
temp = temp%>%
complete(
date = seq.Date(min(as.Date(covid19$date)),
max(as.Date(covid19$date))), by = "day")) %>%
fill("Total.Tested", "positive", "Recovered", "deaths",
"hospitalized")
